####################################
#	Sardinian Events		#
#		by Herkles			#
####################################

add_namespace = srd

country_event = { # Start Up Event
	id = srd.0
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.0 FROM = [From.GetName]" }
	title = srd.0.t
	desc = srd.0.d
	picture = GFX_report_event_SRD_amadeo

	is_triggered_only = yes

	option = {
		name = srd.0.a
	}
}
### Political Events 1 - 10 ###
country_event = { # Mining Monopolies Crash
	id = srd.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.2 FROM = [From.GetName]" }
	title = srd.2.t
	desc = srd.2.d
	picture = GFX_report_event_generic_run_on_the_banks

	is_triggered_only = yes

	option = {
		name = srd.2.a
		add_ideas = SRD_miners_unrest
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.01
		}
	}
}
country_event = { # Crisis in the Bardanzellu Government
	id = srd.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.3 FROM = [From.GetName]" }
	title = srd.3.t
	desc = srd.3.d
	picture = GFX_report_event_SRD_cagliari

	is_triggered_only = yes

	option = {
		name = srd.3.a
		set_country_flag = SRD_badoglio_government
		set_party_name = {
			ideology = paternal_autocrat
			long_name = SRD_paternal_autocrat_2_party_long
			name = SRD_paternal_autocrat_2_party
		}
		custom_effect_tooltip = srd.3.a.tt
		clear_sic_slot = yes
		activate_advisor = SRD_pietro_badoglio_sic
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
					has_game_rule = { rule = SRD_path option = SRD_PATH_MARLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
				}
			}
		}
	}

	option = {
		name = srd.3.b
		set_country_flag = SRD_marras_government
		set_party_name = {
			ideology = paternal_autocrat
			long_name = SRD_paternal_autocrat_4_party_long
			name = SRD_paternal_autocrat_4_party
		}
		custom_effect_tooltip = srd.3.b.tt
		clear_sic_slot = yes
		activate_advisor = SRD_luigi_efisio_marras_sic
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_PATAUT }
					has_game_rule = { rule = SRD_path option = SRD_PATH_AUTDEM }
					has_game_rule = { rule = SRD_path option = SRD_PATH_AUT_MARLIB }
				}
			}
		}
	}
}

### The absolute monarchy path 11 - 20 ###
country_event = { # the absolute Kingdom
	id = srd.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.11 FROM = [From.GetName]" }
	title = srd.11.t
	desc = srd.11.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes

	option = {
		name = srd.11.a
		add_ideas = SRD_reformist_opposition
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.07
		}
	}
}

country_event = { # The Special Laws in Parliament
	id = srd.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.12 FROM = [From.GetName]" }
	title = srd.12.t
	desc = srd.12.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes

	option = {
		name = srd.12.a
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.1
		}
	}

	option = {
		name = srd.12.b
		add_political_power = -50
	}
}

country_event = { # The Last Step
	id = srd.13
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.13 FROM = [From.GetName]" }
	title = srd.13.t
	desc = srd.13.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes

	option = {
		name = srd.13.a # Align the King
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_AUTDEM }
					has_game_rule = { rule = SRD_path option = SRD_PATH_AUT_MARLIB }
				}
			}
		}
		add_political_power = -50
		set_country_flag = SRD_badoglio_accepted_king_ultimatum
	}

	option = {
		name = srd.13.b # He is out of line!
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_PATAUT }
			}
		}
		hidden_effect = {
			country_event = {
				id = srd.14
				days = 5
			}
		}
	}
}

country_event = { # By Order of the King
	id = srd.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.14 FROM = [From.GetName]" }
	title = srd.14.t
	desc = srd.14.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes

	option = {
		name = srd.14.a # Marshal Badoglio, you're being relieved of duty
		clear_sic_slot = yes
		activate_advisor = SRD_paolo_thaon_di_revel_sic
		mark_focus_tree_layout_dirty = yes
		set_party_name = {
			ideology = paternal_autocrat
			long_name = SRD_paternal_autocrat_6_party_long
			name = SRD_paternal_autocrat_6_party
		}
	}
}

country_event = { # An End to the State of Emergency
	id = srd.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.15 FROM = [From.GetName]" }
	title = srd.15.t
	desc = {
		text = srd.15.d.badoglio
		trigger = {
			has_idea = SRD_pietro_badoglio_sic
		}
	}
	desc = {
		text = srd.15.d.other
		trigger = {
			NOT = {
				has_idea = SRD_pietro_badoglio_sic
			}
		}
	}
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes
	trigger = {
		has_government = paternal_autocrat
	}

	option = {
		name = srd.15.a # I suppose
		if = {
			limit = {
				NOT = {
					has_idea = SRD_pietro_badoglio_sic
				}
			}
			add_popularity = {
				ideology = paternal_autocrat
				popularity = -0.3
			}
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = 0.3
			}
			add_popularity = {
				ideology = market_liberal
				popularity = 0.3
			}
		}
		custom_effect_tooltip = srd.22.tt
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = var:current_party_ideology_group
						last_election = "[CURRENT_DATE]"
						election_frequency = 3
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
	}
}

country_event = { # GetYear Elections
	id = srd.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.16 FROM = [From.GetName]" }
	title = srd.16.t
	desc = srd.16.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes
	trigger = {
		tag = SRD
		has_completed_focus = SRD_the_special_laws
		NOT = {
			has_completed_focus = SRD_the_king_commands
		}
	}

	option = {
		name = srd.16.a # The National Bloc wins
		add_political_power = 25
		if = {
			limit = {
				paternal_autocrat < 0.50
			}
			add_popularity = {
				ideology = paternal_autocrat
				popularity = 0.1
			}
		}
		hidden_effect = {
			set_politics = {
				ruling_party = paternal_autocrat
				elections_allowed = yes
				election_frequency = 60
			}
		}
	}
}

country_event = { # GetYear Elections
	id = srd.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.17 FROM = [From.GetName]" }
	title = srd.17.t
	desc = srd.17.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes
	trigger = {
		tag = SRD
		has_completed_focus = SRD_the_king_commands
	}
	immediate = {
		hidden_effect = {
			clear_sic_slot = yes
		}
		if = {
			limit = {
				has_country_flag = ITA_united_italia
				NOT = {
					has_country_flag = SRD_constituent_elections_held
				}
			}
			set_country_flag = SRD_constituent_elections_held
		}
	}

	option = {
		name = srd.17.a # The Right Liberals win
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_AUT_MARLIB }
			}
		}
		if = {
			limit = {
				authoritarian_democrat < 0.45
			}
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = 0.1
			}
		}
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = yes
			election_frequency = 60
		}
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = SRD_constituent_elections_held
				}
				complete_national_focus = SRD_the_constituent_assembly
				clr_country_flag = SRD_constituent_elections_held
			}
		}
		activate_advisor = SRD_roberto_lucifero_d_aprigliano_sic
	}

	option = {
		name = srd.17.b # The Left Liberals win
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_AUTDEM }
			}
		}
		if = {
			limit = {
				market_liberal < 0.45
			}
			add_popularity = {
				ideology = market_liberal
				popularity = 0.1
			}
		}
		set_politics = {
			ruling_party = market_liberal
			elections_allowed = yes
			election_frequency = 60
		}
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = SRD_constituent_elections_held
				}
				complete_national_focus = SRD_the_constituent_assembly
				clr_country_flag = SRD_constituent_elections_held
			}
		}
		activate_advisor = SRD_bruno_villabruna_sic
	}
}
### The Democratic Monarchy Path 21 - 30 ###
country_event = { # The State of Siege is ended
	id = srd.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.21 FROM = [From.GetName]" }
	title = srd.21.t
	desc = srd.21.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = srd.21.a
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
			long_name = SRD_paternal_autocrat_4_party_long
			name = SRD_paternal_autocrat_4_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = SRD_paternal_autocrat_3_party_long
			name = SRD_paternal_autocrat_3_party
		}
		add_ideas = SRD_militarist_badoglio_opposition
		hidden_effect = {
			set_popularities = {
				totalist = ROOT.party_popularity_100@totalist
				syndicalist = ROOT.party_popularity_100@syndicalist
				radical_socialist = ROOT.party_popularity_100@radical_socialist
				social_democrat = ROOT.party_popularity_100@social_democrat
				social_liberal = ROOT.party_popularity_100@social_liberal
				market_liberal = ROOT.party_popularity_100@market_liberal
				social_conservative = ROOT.party_popularity_100@social_conservative
				authoritarian_democrat = ROOT.party_popularity_100@paternal_autocrat
				paternal_autocrat = ROOT.party_popularity_100@authoritarian_democrat
				national_populist = ROOT.party_popularity_100@national_populist
			}
			add_popularity = {
				ideology = paternal_autocrat
				popularity = 0.01
			}
			add_popularity = {
				ideology = radical_socialist
				popularity = 0.01
			}
		}
	}
}
country_event = { # The King calls for Elections
	id = srd.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.22 FROM = [From.GetName]" }
	title = srd.22.t
	desc = srd.22.d
	picture = GFX_report_event_SRI_palace

	is_triggered_only = yes

	option = {
		name = srd.22.a
		custom_effect_tooltip = srd.22.tt
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = var:current_party_ideology_group
						last_election = "[CURRENT_DATE]"
						election_frequency = 3
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
	}
}

country_event = { # The General Election
	id = srd.29
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.29 FROM = [From.GetName]" }
	title = srd.29.t
	desc = srd.29.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		tag = SRD
		has_country_flag = SRD_marras_government
		NOT = {
			has_country_flag = SRD_the_general_election_has_occurred
		}
	}

	immediate = {
		end_coalition = yes
		hidden_effect = {
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = -0.15
			}
			add_popularity = {
				ideology = paternal_autocrat
				popularity = -0.99
			}
			add_popularity = {
				ideology = radical_socialist
				popularity = -0.04
			}
			add_popularity = {
				ideology = social_conservative
				popularity = 0.1
			}
			add_popularity = {
				ideology = social_democrat
				popularity = 0.1
			}
			set_party_name = {
				ideology = authoritarian_democrat
				long_name = SRD_paternal_autocrat_5_party_long
				name = SRD_paternal_autocrat_5_party
			}
			set_party_name = {
				ideology = paternal_autocrat
				long_name = SRD_paternal_autocrat_5_party_long
				name = SRD_paternal_autocrat_5_party
			}
			set_country_flag = SRD_the_general_election_has_occurred
		}
	}

	option = { # Centre-Right Victory
		name = srd.29.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_MARLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
				}
			}
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.02
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.1
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.1
		}
		country_event = {
			id = srd.31
			days = 7
		}
	}
	option = { # Centre Victory
		name = srd.29.b
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
				}
			}
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.1
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.1
		}
		country_event = {
			id = srd.32
			days = 7
		}
	}
	option = { # Centre-Left Victory
		name = srd.29.c
		ai_chance = {
			base = 41
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
					has_game_rule = { rule = SRD_path option = SRD_PATH_MARLIB }
				}
			}
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.1
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.1
		}
		country_event = {
			id = srd.33
			days = 7
		}
	}
}
country_event = { # Election Loop
	id = srd.30
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.30 FROM = [From.GetName]" }
	title = srd.30.t
	desc = srd.30.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes

	trigger = {
		tag = SRD
		has_country_flag = SRD_the_general_election_has_occurred
	}

	immediate = {
		end_coalition = yes
		clear_sic_slot = yes
		if = {
			limit = {
				has_country_flag = ITA_united_italia
				has_completed_focus = SRD_legacy_sassari_brigade
				NOT = {
					has_country_flag = SRD_constituent_elections_held
				}
			}
			set_country_flag = SRD_constituent_elections_held
		}
	}

	option = { # Centre-Right Wins
		name = srd.30.a
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_MARLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
				}
			}
		}
		trigger = {
			has_country_flag = SRD_dems_shift_to_right
		}
		if = {
			limit = {
				social_conservative < 0.45
			}
			add_popularity = {
				ideology = social_conservative
				popularity = 0.1
			}
		}
		if = {
			limit = {
				authoritarian_democrat < 0.15
			}
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = 0.05
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 60
			elections_allowed = yes
		}
		set_temp_variable = { coalition_partner_var = token:paternal_autocrat }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:authoritarian_democrat }
		add_to_coalition = yes
		activate_advisor = SRD_antonio_segni_sic
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = SRD_constituent_elections_held
				}
				complete_national_focus = SRD_the_constituent_assembly
				clr_country_flag = SRD_constituent_elections_held
			}
		}
	}
	option = { # Centre Wins
		name = srd.30.b
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCLIB }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
				}
			}
		}
		trigger = {
			NOT = {
				has_country_flag = SRD_dems_shift_to_right
			}
		}
		if = {
			limit = {
				has_country_flag = SRD_lib_control_centre
			}
			set_politics = {
				ruling_party = market_liberal
				election_frequency = 60
				elections_allowed = yes
			}
			if = {
				limit = {
					market_liberal < 0.3
				}
				add_popularity = {
					ideology = market_liberal
					popularity = 0.1
				}
			}
			set_temp_variable = { coalition_partner_var = token:social_conservative }
			add_to_coalition = yes
			if = {
				limit = {
					has_country_flag = ITA_united_italia
				}
				activate_advisor = SRD_bruno_villabruna_sic
			}
			else = {
				activate_advisor = SRD_raffaele_sanna_randaccio_sic
			}
		}
		else = {
			if = {
				limit = {
					social_conservative < 0.45
				}
				add_popularity = {
					ideology = social_conservative
					popularity = 0.1
				}
			}
			set_politics = {
				ruling_party = social_conservative
				election_frequency = 60
				elections_allowed = yes
			}
			set_temp_variable = { coalition_partner_var = token:market_liberal }
			add_to_coalition = yes
			if = {
				limit = {
					has_country_flag = ITA_united_italia
				}
				activate_advisor = SRD_adone_zoli_sic
			}
			else = {
				activate_advisor = SRD_alfredo_corrias_sic
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = SRD_constituent_elections_held
				}
				complete_national_focus = SRD_the_constituent_assembly
				clr_country_flag = SRD_constituent_elections_held
			}
		}
	}
	option = { # National Centre Wins
		name = srd.30.c
		trigger = {
			has_country_flag = SRD_national_centre_exists
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
				}
			}

		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 60
			elections_allowed = yes
		}
		if = {
			limit = {
				social_liberal < 0.3
			}
			add_popularity = {
				ideology = social_liberal
				popularity = 0.1
			}
		}
		set_temp_variable = { coalition_partner_var = token:market_liberal }
		add_to_coalition = yes
		if = {
			limit = {
				has_country_flag = ITA_united_italia
			}
			activate_advisor = SRD_arturo_labriola_sic
		}
		else = {
			activate_advisor = SRD_camillo_bellieni_sic
		}
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = SRD_constituent_elections_held
				}
				complete_national_focus = SRD_the_constituent_assembly
				clr_country_flag = SRD_constituent_elections_held
			}
		}
	}
	option = { # Centre-Left Wins
		name = srd.30.e
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
					has_game_rule = { rule = SRD_path option = SRD_PATH_MARLIB }
				}
			}
		}
		if = {
			limit = {
				has_country_flag = SRD_soclib_control_sap
			}
			if = {
				limit = {
					social_liberal < 0.3
				}
				add_popularity = {
					ideology = social_liberal
					popularity = 0.1
				}
			}
			set_politics = {
				ruling_party = social_liberal
				election_frequency = 60
				elections_allowed = yes
			}
			set_temp_variable = { coalition_partner_var = token:social_democrat }
			add_to_coalition = yes
			if = {
				limit = {
					has_country_flag = ITA_united_italia
				}
				activate_advisor = SRD_arturo_labriola_sic
			}
			else = {
				activate_advisor = SRD_camillo_bellieni_sic
			}
		}
		else = {
			if = {
				limit = {
					social_democrat < 0.4
				}
				add_popularity = {
					ideology = social_democrat
					popularity = 0.1
				}
			}
			set_politics = {
				ruling_party = social_democrat
				election_frequency = 60
				elections_allowed = yes
			}
			if = {
				limit = {
					NOT = {
						has_country_flag = SRD_action_soclib_split
					}
				}
				set_temp_variable = { coalition_partner_var = token:social_liberal }
				add_to_coalition = yes
			}
			else = {
				set_temp_variable = { coalition_partner_var = token:radical_socialist }
				add_to_coalition = yes
			}
			if = {
				limit = {
					has_country_flag = ITA_united_italia
				}
				activate_advisor = SRD_giovanni_persico_sic
			}
			else = {
				activate_advisor = SRD_emilio_lussu_sic
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = SRD_constituent_elections_held
				}
				complete_national_focus = SRD_the_constituent_assembly
				clr_country_flag = SRD_constituent_elections_held
			}
		}
	}
}

country_event = { # The King meets with the Democratic Union (centre right)
	id = srd.31
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.31 FROM = [From.GetName]" }
	title = srd.31.t
	desc = srd.31.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	option = { # Centre-Right Victory
		name = srd.31.a
		ai_chance = {
			base = 50
		}
		clear_sic_slot = yes
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 60
			elections_allowed = yes
		}
		activate_advisor = SRD_antonio_segni_sic
		set_temp_variable = { coalition_partner_var = token:paternal_autocrat }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:authoritarian_democrat }
		add_to_coalition = yes
		set_country_flag = SRD_dems_shift_to_right
	}

	option = { # National Unity
		name = srd.31.b
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_SOCCON }
			}
		}
		add_political_power = -50
		clear_sic_slot = yes
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 60
			elections_allowed = yes
		}
		activate_advisor = SRD_alfredo_corrias_sic
		set_temp_variable = { coalition_partner_var = token:market_liberal }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:social_liberal }
		add_to_coalition = yes
		set_temp_variable = { coalition_partner_var = token:social_democrat }
		add_to_coalition = yes
	}
}

country_event = { # The King meets with the Centrists
	id = srd.32
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.32 FROM = [From.GetName]" }
	title = srd.32.t
	desc = srd.32.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	option = { # Invite the UDS
		name = srd.32.a
		clear_sic_slot = yes
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_MARLIB }
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 60
			elections_allowed = yes
		}
		activate_advisor = SRD_alfredo_corrias_sic
		set_temp_variable = { coalition_partner_var = token:market_liberal }
		add_to_coalition = yes
	}

	option = { # Invite the Liberals
		name = srd.32.b
		clear_sic_slot = yes
		ai_chance = {
			base = 50
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 60
			elections_allowed = yes
		}
		activate_advisor = SRD_raffaele_sanna_randaccio_sic
		add_popularity = {
			ideology = market_liberal
			popularity = 0.075
		}
		add_popularity = {
			ideology = social_conservative
			popularity = -0.05
		}
		set_temp_variable = { coalition_partner_var = token:social_conservative }
		add_to_coalition = yes
		set_country_flag = SRD_lib_control_centre
	}
}

country_event = { # The King meets with the SAP
	id = srd.33
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.33 FROM = [From.GetName]" }
	title = srd.33.t
	desc = srd.33.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	option = { # Invite Bellieni
		name = srd.33.a
		clear_sic_slot = yes
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_SOCDEM }
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 60
			elections_allowed = yes
		}
		activate_advisor = SRD_camillo_bellieni_sic
		set_temp_variable = { coalition_partner_var = token:social_democrat }
		add_to_coalition = yes
		set_country_flag = SRD_soclib_control_sap
	}

	option = { # Invite Lussu
		name = srd.33.b
		clear_sic_slot = yes
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = SRD_path option = SRD_PATH_SOCLIB }
			}
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 60
			elections_allowed = yes
		}
		activate_advisor = SRD_emilio_lussu_sic
		set_temp_variable = { coalition_partner_var = token:social_liberal }
		add_to_coalition = yes
	}
}

country_event = { # Protests in Cagliari
	id = srd.34
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.34 FROM = [From.GetName]" }
	title = srd.34.t
	desc = srd.34.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		OR = {
			has_completed_focus = SRD_enforce_centralism
			has_country_flag = SRD_sardists_angered_over_autonomy
		}
	}
	option = { # How daring
		name = srd.34.a
		add_stability = -0.1
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
		set_country_flag = SRD_autonomy_protests
	}
}

country_event = { # Parliament Votes on Sardinian Autonomy
	id = srd.35
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.35 FROM = [From.GetName]" }
	title = srd.35.t
	desc = srd.35.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		has_completed_focus = SRD_strengthen_democracy
	}
	option = { # The bill passes
		name = srd.35.a
		add_political_power = -25
		add_stability = 0.05
		114 = {
			add_dynamic_modifier = { modifier = SRD_sardinia_autonomous_region }
		}
	}
	option = { # The bill is defeated
		name = srd.35.b
		add_political_power = 25
		set_country_flag = SRD_sardists_angered_over_autonomy
		country_event = {
			id = srd.34
			days = 3
		}
	}
}

country_event = { # The King's Speech
	id = srd.36
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.36 FROM = [From.GetName]" }
	title = srd.36.t
	desc = srd.36.d
	picture = GFX_report_event_SRD_amadeo

	is_triggered_only = yes
	fire_only_once = yes

	option = { # Avanti Sardegna
		name = srd.36.a
		add_stability = 0.05
		if = {
			limit = {
				has_country_flag = SRD_autonomy_protests
			}
			add_popularity = {
				ideology = radical_socialist
				popularity = -0.03
			}
		}
	}
}

### Kingdom of Italy 36 - 45 ###
country_event = { # New Political Parties in the Kingdom of Italy
	id = srd.37
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.37 FROM = [From.GetName]" }
	title = srd.37.t
	desc = srd.37.d
	picture = GFX_report_event_generic_rally

	is_triggered_only = yes

	option = {
		name = srd.37.a
		set_party_name = {
			ideology = social_democrat
			long_name = SRD_social_dem_party_long
			name = SRD_social_dem_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = SRD_social_dem_party_long
			name = SRD_social_dem_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = SRD_market_lib_party_long
			name = SRD_market_lib_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = SRD_social_cons_party_long
			name = SRD_social_cons_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = SRD_natpop_party_long
			name = SRD_natpop_party
		}
		set_party_name = {
			ideology = syndicalist
			long_name = SRD_syndic_party_long
			name = SRD_syndic_party
		}
		set_party_name = {
			ideology = radical_socialist
			long_name = SRD_rad_socialist_party_long
			name = SRD_rad_socialist_party
		}
		set_country_flag = italian_parties
		hidden_effect = {
			country_event = {
				id = srd.38
				days = 300
				random_days = 100
			}
		}
	}
}

country_event = { # Action Party and Socialist Party fuse
	id = srd.38
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.38 FROM = [From.GetName]" }
	title = srd.38.t
	desc = srd.38.d
	picture = GFX_report_event_generic_rally

	is_triggered_only = yes
	trigger = {
		has_elected_government = yes
	}

	option = {
		name = srd.38.a #A new beginning?
		set_country_flag = SRD_socialist_labour_exists
		set_party_name = {
			ideology = social_democrat
			long_name = SRD_social_dem_unified_party_long
			name = SRD_social_dem_unified_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = SRD_social_dem_unified_party_long
			name = SRD_social_dem_unified_party
		}
		set_party_name = {
			ideology = radical_socialist
			long_name = SRD_social_dem_unified_party_long
			name = SRD_social_dem_unified_party
		}
		if = {
			limit = {
				OR = {
					has_government = social_democrat
					has_government = social_liberal
				}
			}
			set_temp_variable = { coalition_partner_var = token:radical_socialist }
			add_to_coalition = yes
		}
		hidden_effect = {
			country_event = {
				id = srd.39
				days = 30
				random_days = 10
			}
		}
	}
}

country_event = { # Moderate Actionists Split
	id = srd.39
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.39 FROM = [From.GetName]" }
	title = srd.39.t
	desc = srd.39.d
	picture = GFX_report_event_generic_rally

	is_triggered_only = yes
	trigger = {
		has_elected_government = yes
	}

	option = {
		name = srd.39.a #It was already too wide of a party
		if = {
			limit = {
				has_government = social_liberal
			}
			end_coalition = yes
			set_temp_variable = { coalition_partner_var = token:market_liberal }
			add_to_coalition = yes
			set_country_flag = SRD_dems_shift_to_right
		}
		if = {
			limit = {
				has_country_flag = SRD_dems_shift_to_right
			}
			set_country_flag = SRD_national_centre_exists
		}
		set_party_name = {
			ideology = social_liberal
			long_name = SRD_social_lib_party_long
			name = SRD_social_lib_party
		}
		set_country_flag = SRD_action_soclib_split
		clr_country_flag = SRD_soclib_control_sap
	}
}

### Mostly Flavour ###

country_event = { # The King's Men
	id = srd.41
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.41 FROM = [From.GetName]" }
	title = srd.41.t
	desc = srd.41.d
	picture = GFX_report_event_SRD_amadeo2

	is_triggered_only = yes
	trigger = {
		has_country_leader_with_trait = SRD_Explorer_King
	}

	option = {
		name = srd.41.a # May these men be the worthy successors of the Third Army
		add_war_support = 0.05
		effect_tooltip = {
			swap_ruler_traits = { remove = SRD_Explorer_King add = SRD_Iron_King }
		}
		hidden_effect = {

			random_character = {
				limit = {
					is_country_leader = yes
				}
				remove_trait = { trait = SRD_Explorer_King ideology = social_democrat_subtype }
				remove_trait = { trait = SRD_Explorer_King ideology = social_liberal_subtype }
				remove_trait = { trait = SRD_Explorer_King ideology = market_liberal_subtype }
				remove_trait = { trait = SRD_Explorer_King ideology = social_conservative_subtype }
				remove_trait = { trait = SRD_Explorer_King ideology = authoritarian_democrat_subtype }
				remove_trait = { trait = SRD_Explorer_King ideology = paternal_autocrat_subtype }
				remove_trait = { trait = SRD_Explorer_King ideology = national_populist_subtype }
				add_trait = { trait = SRD_Iron_King ideology = social_democrat_subtype }
				add_trait = { trait = SRD_Iron_King ideology = social_liberal_subtype }
				add_trait = { trait = SRD_Iron_King ideology = market_liberal_subtype }
				add_trait = { trait = SRD_Iron_King ideology = social_conservative_subtype }
				add_trait = { trait = SRD_Iron_King ideology = authoritarian_democrat_subtype }
				add_trait = { trait = SRD_Iron_King ideology = paternal_autocrat_subtype }
				add_trait = { trait = SRD_Iron_King ideology = national_populist_subtype }
			}
			set_country_leader_description = {
				ideology = social_democrat
				desc = SRD_amedeo_aosta_war_leader_desc
			}
			set_country_leader_description = {
				ideology = social_liberal
				desc = SRD_amedeo_aosta_war_leader_desc
			}
			set_country_leader_description = {
				ideology = market_liberal
				desc = SRD_amedeo_aosta_war_leader_desc
			}
			set_country_leader_description = {
				ideology = social_conservative
				desc = SRD_amedeo_aosta_war_leader_desc
			}
			set_country_leader_description = {
				ideology = authoritarian_democrat
				desc = SRD_amedeo_aosta_war_leader_desc
			}
			set_country_leader_description = {
				ideology = paternal_autocrat
				desc = SRD_amedeo_aosta_war_leader_desc
			}
			set_country_leader_description = {
				ideology = national_populist
				desc = SRD_amedeo_aosta_war_leader_desc
			}
		}
	}
}

country_event = { # PSd'Az/PCd'Az Unity of Action Pact
	id = srd.42
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.42 FROM = [From.GetName]" }
	title = srd.42.t
	desc = srd.42.d
	picture = GFX_report_event_generic_rally

	is_triggered_only = yes
	trigger = {
		has_elected_government = yes
		owns_state = 1
	}
	immediate = {
		hidden_effect = {
			add_advisor_role = {
				character = SRD_petru_rocca
				advisor = {
					slot = political_advisor
					idea_token = SRD_petru_rocca
					traits = { KR_media_magnate }
					available = {
						owns_state = 1
					}
				}
			}
		}
	}

	option = {
		name = srd.42.a # To the future of Corsica!
		add_war_support = 0.025
		if = {
			limit = {
				NOT = {
					has_country_flag = italian_parties
				}
			}
			set_party_name = {
				ideology = social_democrat
				long_name = SRD_sardinian_corsican_action_party_long
				name = SRD_sardinian_corsican_action_party
			}
			set_party_name = {
				ideology = social_liberal
				long_name = SRD_sardinian_corsican_action_party_long
				name = SRD_sardinian_corsican_action_party
			}
		}
		custom_effect_tooltip = tooltip_white_line
		custom_effect_tooltip = available_political_advisor
		show_ideas_tooltip = SRD_petru_rocca
	}
}

## Industry

country_event = { # The Fate of FIAT
	id = srd.43
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.43 FROM = [From.GetName]" }
	title = srd.43.t
	desc = srd.43.d
	picture = GFX_report_event_generic_economic_policy

	is_triggered_only = yes
	fire_only_once = yes
	option = {
		name = srd.43.a # Allow the merger
		custom_effect_tooltip = SRD_fate_of_fiat_tt_2
		effect_tooltip = {
			swap_ideas = {
				remove_idea = fiat_2
				add_idea = fiat
			}
			swap_ideas = {
				remove_idea = fiat_aviazione
				add_idea = fiat_aviazione_2
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_idea = automobili_agnelli
				}
				remove_ideas = automobili_agnelli
			}
			if = {
				limit = {
					has_idea = agnelli_carri_armati
				}
				remove_ideas = agnelli_carri_armati
			}
			set_country_flag = SRD_fiat_aa_merged
		}
	}

	option = {
		name = srd.43.b # Keep them separate
		random_owned_controlled_state = {
			limit = {
				is_european_italy = yes
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 1 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 2
			add_building_construction = {
				type = arms_factory
				level = 2
				instant_build = yes
			}
		}
		if = {
			limit = {
				has_idea = SRD_corporate_support_idea
			}
			custom_effect_tooltip = srd.43.b.corpos.tt
			add_political_power = -50
			remove_ideas = SRD_corporate_support_idea
		}
	}
}

# Postwar Tree

country_event = { # The Constituent Assembly
	id = srd.44
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.44 FROM = [From.GetName]" }
	title = srd.44.t
	desc = srd.44.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = srd.44.a # Congratulations
		set_country_flag = SRD_constituent_assembly_concluded
	}
}

country_event = { # Calls for Elections
	id = srd.45
	immediate = { log = "[GetDateText]: [Root.GetName]: event srd.45 FROM = [From.GetName]" }
	title = srd.45.t
	desc = srd.45.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		NOT = {
			has_completed_focus = SRD_the_constituent_assembly
		}
		has_democratic_government = yes
	}

	option = {
		name = srd.45.a # Maybe we should.
		custom_effect_tooltip = srd.22.tt
		hidden_effect = {
			meta_effect = {
				text = {
					set_politics = {
						ruling_party = var:current_party_ideology_group
						last_election = "[CURRENT_DATE]"
						election_frequency = 3
						elections_allowed = yes
					}
				}
				CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
			}
		}
	}
}
