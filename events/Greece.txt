###########################
# Greece Events
###########################

add_namespace = gre

### Intro Events
country_event = {
	id = gre.1
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.1 FROM = [From.GetName]" }
	title = gre.1.t
	desc = gre.1.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = gre.1.a
		hidden_effect = {
			country_event = { id = gre.2 days = 1 }
		}
	}
}

country_event = {
	id = gre.2
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.2 FROM = [From.GetName]" }
	title = gre.2.t
	desc = gre.2.d
	picture = GFX_report_event_GRE_referendum

	is_triggered_only = yes

	option = {
		name = gre.2.a
	}
}

### Political Events

# Greek Independence Day
country_event = {
	id = gre.3
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.3 FROM = [From.GetName]" }
	title = gre.3.t
	desc = gre.3.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
	}

	option = {
		name = gre.3.a
		add_political_power = 20
		hidden_effect = {
			country_event = { id = gre.4 days = 365 }
		}
	}
}

# Greek Independence Day (subsequent years)
country_event = {
	id = gre.4
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.4 FROM = [From.GetName]" }
	title = gre.3.t
	desc = gre.4.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
	}

	option = {
		name = gre.4.a
		add_political_power = 20
		hidden_effect = {
			country_event = { id = gre.4 days = 365 }
		}
	}
}

# Black Monday hits Greece
country_event = {
	id = gre.5
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.5 FROM = [From.GetName]" }
	title = gre.5.t
	desc = gre.5.d
	picture = GFX_report_event_HOL_black_monday

	is_triggered_only = yes

	option = {
		name = gre.5.a
		add_ideas = GRE_black_monday_1
		add_political_power = -200
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
}

# Agricultural crisis (fired by focus)
country_event = {
	id = gre.6
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.6 FROM = [From.GetName]" }
	title = gre.6.t
	desc = gre.6.d
	picture = GFX_report_event_SRI_italian_farmers

	is_triggered_only = yes

	option = {
		name = gre.6.a #Help them out as much as we can
		ai_chance = {
			base = 60
		}
		add_political_power = -50
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		if = {
			limit = {
				NOT = {
					has_government = radical_socialist
				}
			}
			add_popularity = {
				ideology = radical_socialist
				popularity = 0.05
			}
			else = {
				add_popularity = {
					ideology = radical_socialist
					popularity = -0.05
				}
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
	option = {
		name = gre.6.b #Dig deep - they're the backbone of Greece
		ai_chance = {
			base = 40
		}
		add_political_power = -200
		add_stability = 0.03
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Foreign Industry Question (fired by focus)
country_event = {
	id = gre.7
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.7 FROM = [From.GetName]" }
	title = gre.7.t
	desc = gre.7.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		name = gre.7.a #Seize it all, no matter the repercussions
		ai_chance = {
			base = 75
		}
		increase_ruling_party_popularity_by_5 = yes
		custom_effect_tooltip = GRE_decrease_monarchist
		if = {
			limit = {
				has_idea = GRE_foreign_industry_GER1
			}
			remove_ideas = GRE_foreign_industry_GER1
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_stole_industry1
			}
			GER = {
				country_event = gre.8
			}
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_AUS1
			}
			remove_ideas = GRE_foreign_industry_AUS1
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_stole_industry1
			}
			AUS = {
				country_event = gre.8
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
	option = {
		name = gre.7.b #Deal with the worst cases only
		ai_chance = {
			base = 20
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_GER1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_GER1
				add_idea = GRE_foreign_industry_GER2
			}
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_stole_industry2
			}
			GER = {
				country_event = gre.11
			}
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_AUS1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_AUS1
				add_idea = GRE_foreign_industry_AUS2
			}
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_stole_industry2
			}
			AUS = {
				country_event = gre.11
			}
		}
	}
	option = {
		name = gre.7.c #Subsidize the investors ourselves - they'd better be grateful
		ai_chance = {
			base = 5
		}
		add_political_power = -200
		decrease_ruling_party_popularity_by_10 = yes
		custom_effect_tooltip = GRE_increase_monarchist
		if = {
			limit = {
				has_idea = GRE_foreign_industry_GER1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_GER1
				add_idea = GRE_foreign_industry_GER3
			}
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_aided_industry
			}
		}
		if = {
			limit = {
				has_idea = GRE_foreign_industry_AUS1
			}
			swap_ideas = {
				remove_idea = GRE_foreign_industry_AUS1
				add_idea = GRE_foreign_industry_AUS3
			}
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_aided_industry
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
}

# Germany or Austria reacts to full nationalization
country_event = {
	id = gre.8
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.8 FROM = [From.GetName]" }
	title = gre.8.t
	desc = gre.8.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		name = gre.8.a #Apply sanctions and pull all business out at once
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				tag = AUS
			}
		}
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_they_applied_sanctions1
		}
		GRE = {
			country_event = { id = gre.9 days = 3 }
		}
	}
	option = {
		name = gre.8.b #Just apply the sanctions and express our outrage
		ai_chance = {
			base = 30
			modifier = {
				factor = 1.5
				tag = GER
			}
		}
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_they_applied_sanctions2
		}
		GRE = {
			country_event = { id = gre.10 days = 3 }
		}
	}
	option = {
		name = gre.8.c #Leave them be - we're all trying to cope
		ai_chance = {
			base = 20
			modifier = {
				factor = 2.0
				tag = AUS
			}
		}
	}
}

# Germany or Austria has_responded with full sanctions
country_event = {
	id = gre.9
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.9 FROM = [From.GetName]" }
	title = gre.9.t
	desc = gre.9.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = gre.9.a
		if = {
			limit = {
				FROM = {
					tag = GER
				}
			}
			add_timed_idea = {
				idea = GRE_german_sanctions
				days = 1095
			}
		}
		else = {
			add_timed_idea = {
				idea = GRE_austrian_sanctions
				days = 1095
			}
		}
		every_country = {
			limit = { is_ally_with = FROM }
			add_opinion_modifier = {
				target = GRE
				modifier = GRE_applied_sanctions
			}
		}
	}
}

# Germany or Austria has_responded with partial sanctions
country_event = {
	id = gre.10
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.10 FROM = [From.GetName]" }
	title = gre.10.t
	desc = gre.10.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = gre.9.a
		every_country = {
			limit = { is_ally_with = FROM }
			add_opinion_modifier = {
				target = GRE
				modifier = GRE_applied_sanctions
			}
		}
	}
}

# Germany or Austria reacts to partial nationalization
country_event = {
	id = gre.11
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.11 FROM = [From.GetName]" }
	title = gre.11.t
	desc = gre.11.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		name = gre.11.a #Apply sanctions and express our outrage
		ai_chance = {
			base = 65
		}
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_they_applied_sanctions2
		}
		GRE = {
			country_event = { id = gre.10 days = 3 }
		}
	}
	option = {
		name = gre.8.c #Leave them be - we're all trying to cope
		ai_chance = {
			base = 35
			modifier = {
				factor = 2
				tag = AUS
			}
		}
	}
}

# Government waits too long to start referendum
country_event = {
	id = gre.12
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.12 FROM = [From.GetName]" }
	title = gre.12.t
	desc = gre.12.d
	picture = GFX_report_event_GRE_metaxas

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_idea = GRE_memories_of_king
		has_elected_government = yes
		controls_all_owned_states = yes
		has_war = no
		OR = {
			has_stability > 0.60
			has_country_flag = GRE_balkan_war_loss
			AND = {
				owns_state = 731 #Western Macedonia
				owns_state = 769 #Eastern Macedonia
			}
		}
		has_country_flag = GRE_1938_elections_happened
		NOT = {
			focus_progress = { focus = GRE_monarchy_referendum progress > 0 }
			has_completed_focus = GRE_monarchy_referendum
		}
	}

	mean_time_to_happen = {
		months = 6
	}

	option = {
		name = gre.12.a
		decrease_ruling_party_popularity_by_5 = yes
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Greece asks to join faction (fired by decision)
country_event = {
	id = gre.14
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.14 FROM = [From.GetName]" }
	title = gre.14.t
	desc = gre.14.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	trigger = {
		is_faction_leader = yes
		country_exists = FROM
		NOT = { has_war_with = FROM }
		FROM = { is_in_faction = no }
	}

	option = {
		name = gre.14.a #Of course!
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				FROM = {
					has_completed_focus = GRE_megali_idea
					has_country_flag = GRE_may_start_megali
					has_country_flag = GRE_chose_megali
				}
				NOT = {
					tag = SER
					tag = RUS
					AND = {
						has_war = yes
						any_enemy_country = {
							any_owned_state = {
								OR = {
									is_claimed_by = GRE
									is_core_of = GRE
								}
							}
						}
					}
				}
			}
			modifier = {
				factor = 0.5
				FROM = {
					has_completed_focus = GRE_megali_idea
					has_country_flag = GRE_may_start_megali
					NOT = { has_country_flag = GRE_chose_megali }
				}
				NOT = {
					tag = SER
					tag = RUS
					AND = {
						has_war = yes
						any_enemy_country = {
							any_owned_state = {
								OR = {
									is_claimed_by = GRE
									is_core_of = GRE
								}
							}
						}
					}
				}
			}
		}
		add_to_faction = FROM
		FROM = {
			country_event = { id = gre.15 hours = 3 }
		}
	}
	option = {
		name = gre.14.b #They will be more trouble than they're worth
		ai_chance = {
			base = 10
		}
		FROM = {
			country_event = { id = gre.16 hours = 3 }
		}
	}
}

# Faction accepts Greece
country_event = {
	id = gre.15
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.15 FROM = [From.GetName]" }
	title = gre.15.t
	desc = gre.15.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		name = gre.15.a
		add_political_power = 50
	}
}

# Faction refuses Greece
country_event = {
	id = gre.16
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.16 FROM = [From.GetName]" }
	title = gre.16.t
	desc = gre.16.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		name = gre.16.a
		add_political_power = -25
	}
}

# Massive demonstrations after Balkan War loss
country_event = {
	id = gre.17
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.17 FROM = [From.GetName]" }
	title = gre.17.t
	desc = gre.17.d
	picture = GFX_report_event_GRE_protest

	is_triggered_only = yes

	option = {
		name = gre.17.a
		set_country_flag = GRE_balkan_war_loss
		add_stability = -0.20
		decrease_ruling_party_popularity_by_20 = yes
	}
}

# The government nears collapse
country_event = {
	id = gre.18
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.18 FROM = [From.GetName]" }
	title = gre.18.t
	desc = gre.18.d
	picture = GFX_report_event_SPA_civwar3

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_balkan_war_loss
		controls_all_owned_states = yes
		is_subject = no
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = gre.18.a #Forces loyal to Metaxas take over
		trigger = {
			has_character = GRE_ioannis_metaxas
			NOT = { has_government = paternal_autocrat }
		}
		ai_chance = {
			base = 35
		}
		clr_country_flag = GRE_republicans_win_referendum
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { has_socialist_government = yes }
			GRE_stop_being_syndicalist = yes
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = { faction_leader = { tag = BPL } }
			}
			leave_faction = yes
			separate_peace_all_wars = yes
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Ioannis_Metaxas_hog_pau
			GRE_Alexandros_Korizis_for_pau
			GRE_Anastasios_Michalakopoulos_eco_pau
			GRE_Konstantinos_Maniadakis_sec_pau
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.10
		}
		hidden_effect = { news_event = gre.500 }
	}
	option = {
		name = gre.18.b #Athanasios Klaras wrests control in a coup
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
		}
		clr_country_flag = GRE_republicans_win_referendum
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		leave_faction = yes
		separate_peace_all_wars = yes
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		GRE_become_syndicalist = yes
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Athanasios_Klaras_sec_tot
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		hidden_effect = { news_event = gre.501 }
	}
	option = {
		name = gre.18.c #The army takes control, promising free and democratic elections
		trigger = {
			OR = {
				has_government = national_populist
				has_government = paternal_autocrat
				has_socialist_government = yes
			}
			NOT = { has_cosmetic_tag = GRE_kingdom }
		}
		ai_chance = {
			base = 50
		}
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { has_socialist_government = yes }
			GRE_stop_being_syndicalist = yes
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = { faction_leader = { tag = BPL } }
			}
			leave_faction = yes
		}
		separate_peace_all_wars = yes
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Panagiotis_Kanellopoulos_hog_sli
			GRE_Panagiotis_Pipinelis_for_ade
			GRE_Ioannis_Venizelos_eco_ade
			GRE_Konstantinos_Tsaldaris_sec_sco
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.10
		}
		hidden_effect = {
			news_event = gre.502
			country_event = { id = gre.53 days = 60 }
		}
	}
	option = {
		name = gre.18.e #The King abdicates the throne, restoring the republic
		ai_chance = {
			base = 30
		}
		trigger = {
			has_cosmetic_tag = GRE_kingdom
		}
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_decrease_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = -4 }
		}
		if = {
			limit = { has_country_flag = GRE_monarchists_win_referendum }
			set_country_flag = GRE_republicans_win_referendum
			clr_country_flag = GRE_monarchists_win_referendum
		}
		add_stability = -0.10
		add_political_power = -200
		GRE_restore_republic = yes
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = GRE_was_soccon
		}
		else_if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = GRE_was_soclib
		}
		else_if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = GRE_was_marklib
		}
		else_if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = GRE_was_socdem
		}
		country_event = { id = gre.54 days = 1 }
	}
	option = {
		name = gre.18.f #The government steps down, promising immediate elections
		trigger = {
			has_elected_government = yes
			NOT = { has_cosmetic_tag = GRE_kingdom }
		}
		ai_chance = {
			base = 15
		}
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_increase_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = 4 }
		}
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = GRE_was_soccon
		}
		else_if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = GRE_was_soclib
		}
		else_if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = GRE_was_marklib
		}
		else_if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = GRE_was_socdem
		}
		country_event = { id = gre.54 days = 1 }
	}
}

# The Death of Ioannis Metaxas
country_event = {
	id = gre.19
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.19 FROM = [From.GetName]" }
	title = gre.19.t
	picture = GFX_report_event_GRE_metaxas

	desc = {
		text = gre.19.d.ishos
		trigger = {
			OR = {
				has_country_leader = { character = GRE_ioannis_metaxas }
				has_idea = GRE_Ioannis_Metaxas_hog_pau
				has_idea = GRE_Ioannis_Metaxas_hog_ade
			}
		}
	}
	desc = {
		text = gre.19.d.nothos
		trigger = {
			NOT = {
				has_country_leader = { character = GRE_ioannis_metaxas }
				has_idea = GRE_Ioannis_Metaxas_hog_pau
				has_idea = GRE_Ioannis_Metaxas_hog_ade
			}
		}
	}

	is_triggered_only = yes

	trigger = {
		has_character = GRE_ioannis_metaxas
	}

	option = {
		name = gre.19.a
		retire_character = GRE_ioannis_metaxas
		if = {
			limit = { has_idea = GRE_Ioannis_Metaxas_hog_pau }
			add_ideas = GRE_Alexandros_Korizis_hog_pau
		}
		if = {
			limit = { has_idea = GRE_Ioannis_Metaxas_hog_ade }
			add_ideas = GRE_Archbishop_Damaskinos_hog_ade
		}
		if = {
			limit = { has_idea = GRE_Ioannis_Metaxas_for_pau }
			hidden_effect = { remove_ideas_with_trait = foreign_minister }
			add_ideas = GRE_Alexandros_Korizis_for_pau
		}
	}
}

# Papanastasiou dies shortly after 1938 election
country_event = {
	id = gre.20
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.20 FROM = [From.GetName]" }
	title = gre.20.t
	picture = GFX_report_event_europe_funeral

	desc = {
		text = gre.20.d.ishos
		trigger = {
			OR = {
				has_country_leader = { character = GRE_alexandros_papanastasiou }
				has_idea = GRE_Alexandros_Papanastasiou_hog_sde
			}
		}
	}
	desc = {
		text = gre.20.d.nothos
		trigger = {
			NOT = {
				has_country_leader = { character = GRE_alexandros_papanastasiou }
				has_idea = GRE_Alexandros_Papanastasiou_hog_sde
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.20.a
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_nikolaos_plastiras
				country_leader = { ideology = social_democrat_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_nikolaos_plastiras
				country_leader = { ideology = social_democrat_subtype }
				promote_leader = yes
			}
		}
		retire_character = GRE_alexandros_papanastasiou
		if = {
			limit = { has_idea = GRE_Alexandros_Papanastasiou_hog_sde }
			add_ideas = GRE_Nikolaos_Plastiras_hog_sde
		}
		if = {
			limit = { has_idea = GRE_Alexandros_Papanastasiou_for_sde }
			hidden_effect = { remove_ideas_with_trait = foreign_minister }
			add_ideas = GRE_Nikolaos_Plastiras_for_sde
		}
	}
}

# Gavrillides steps down in 1940
country_event = {
	id = gre.21
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.21 FROM = [From.GetName]" }
	title = gre.21.t
	picture = GFX_report_event_GRE_parliament

	desc = {
		text = gre.21.d.ishos
		trigger = {
			OR = {
				has_country_leader = { character = GRE_kostas_gavriilides }
				has_idea = GRE_Kostas_Gavriilides_for_rso
			}
		}
	}
	desc = {
		text = gre.21.d.nothos
		trigger = {
			NOT = {
				has_country_leader = { character = GRE_kostas_gavriilides }
				has_idea = GRE_Kostas_Gavriilides_for_rso
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.20.a
		add_country_leader_role = {
			character = GRE_nikos_ploumpidis
			country_leader = { ideology = radical_socialist_subtype }
			promote_leader = yes
		}
		retire_character = GRE_kostas_gavriilides
		if = {
			limit = { has_idea = GRE_Kostas_Gavriilides_hog_rso }
			add_ideas = GRE_Nikos_Ploumpidis_hog_rso
		}
		if = {
			limit = { has_idea = GRE_Kostas_Gavriilides_for_rso }
			hidden_effect = { remove_ideas_with_trait = foreign_minister }
			add_ideas = GRE_Nikos_Ploumpidis_for_rso
		}
	}
}

# George Papandreou is challenged for leadership
country_event = {
	id = gre.22
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.22 FROM = [From.GetName]" }
	title = gre.22.t
	desc = gre.22.d
	picture = GFX_report_event_GRE_papandreou

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		date > 1940.10.10
		has_government = social_liberal
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = gre.22.a #Kanellopoulos wrests controls of the party
		ai_chance = {
			base = 70
		}
		add_political_power = -50
		if = {
			limit = { has_idea = GRE_Georgios_Papandreou_hog_sli }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_panagiotis_kanellopoulos
				country_leader = { ideology = social_liberal_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_panagiotis_kanellopoulos
				country_leader = { ideology = social_liberal_subtype }
				promote_leader = yes
			}
		}
	}
	option = {
		name = gre.22.b #Papandreou holds onto leadership after a narrow vote
		ai_chance = {
			base = 30
		}
		add_popularity = {
			ideology = social_liberal
			popularity = -0.10
		}
	}
}

# Themistoklis Sofoulis dies in 1949
country_event = {
	id = gre.23
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.23 FROM = [From.GetName]" }
	title = gre.23.t
	picture = GFX_report_event_europe_funeral

	desc = {
		text = gre.23.d.ishos
		trigger = {
			OR = {
				has_country_leader = { character = GRE_themistoklis_sofoulis }
				has_idea = GRE_Themistoklis_Sofoulis_hog_mli
			}
		}
	}
	desc = {
		text = gre.23.d.nothos
		trigger = {
			NOT = {
				has_country_leader = { character = GRE_themistoklis_sofoulis }
				has_idea = GRE_Themistoklis_Sofoulis_hog_mli
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.20.a
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_konstantinos_tsatsos
				country_leader = { ideology = market_liberal_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_konstantinos_tsatsos
				country_leader = { ideology = market_liberal_subtype }
				promote_leader = yes
			}
		}
		retire_character = GRE_themistoklis_sofoulis
		if = {
			limit = { has_idea = GRE_Themistoklis_Sofoulis_hog_mli }
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
		}
		if = {
			limit = { has_idea = GRE_Themistoklis_Sofoulis_for_mli }
			hidden_effect = { remove_ideas_with_trait = foreign_minister }
			add_ideas = GRE_Emmanouil_Tsouderos_for_mli
		}
		if = {
			limit = { has_idea = GRE_Themistoklis_Sofoulis_eco_mli }
			hidden_effect = { remove_ideas_with_trait = economy_minister }
			add_ideas = GRE_Emmanouil_Tsouderos_eco_mli
		}
	}
}

# Panagis Tsaldaris dies in 1936
country_event = {
	id = gre.24
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.24 FROM = [From.GetName]" }
	title = gre.24.t
	desc = gre.24.d
	picture = GFX_report_event_europe_funeral

	is_triggered_only = yes

	option = {
		name = gre.24.a
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_konstantinos_tsaldaris
				country_leader = { ideology = social_conservative_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_konstantinos_tsaldaris
				country_leader = { ideology = social_conservative_subtype }
				promote_leader = yes
			}
		}
		retire_character = GRE_panagis_tsaldaris
		if = {
			limit = { has_idea = GRE_Panagis_Tsaldaris_hog_sco }
			add_ideas = GRE_Konstantinos_Tsaldaris_hog_sco
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.03
		}
	}
}

### Election Events

# Elections prior to monarchy referendum
country_event = {
	id = gre.50
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.50 FROM = [From.GetName]" }
	title = gre.50.t
	desc = gre.50.d
	picture = GFX_report_event_AST_election

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
		NOT = { has_completed_focus = GRE_monarchy_referendum }
		has_capitulated = no
	}

	immediate = {
		remove_all_ministers = yes
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		name = gre.50.a #Social Conservative
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
		add_ideas = {
			GRE_Konstantinos_Tsaldaris_hog_sco
			GRE_Sophocles_Venizelos_for_sco
			GRE_Periklis_Rallis_eco_sco
			GRE_Stephanos_Lakiantos_sec_sco
		}
	}
	option = {
		name = gre.50.b #Social Liberal
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
		if = {
			limit = { GRE_panagiotis_kanellopoulos = { can_be_country_leader = yes } }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		else = {
			add_ideas = GRE_Georgios_Papandreou_hog_sli
		}
		add_ideas = {
			GRE_Constantinos_Rentis_for_sli
			GRE_Georgios_Athanasiadis_Novas_eco_sli
			GRE_Pafsanias_Katsotas_sec_sli
		}
	}
	option = {
		name = gre.50.c #Market Liberal
		ai_chance = {
			base = 20
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Themistoklis_Sofoulis_hog_mli
		}
		else = {
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
		}
		add_ideas = {
			GRE_Emmanouil_Tsouderos_for_mli
			GRE_Stavros_Kostopoulos_eco_mli
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Konstantinos_Tsatsos_sec_mli
		}
		else = {
			add_ideas = GRE_Lambros_Labrianidis_sec_mli
		}
	}
	option = {
		name = gre.50.e #Social Democrats
		ai_chance = {
			base = 20
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -2
			}
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_alexandros_papanastasiou }
			add_ideas = GRE_Alexandros_Papanastasiou_hog_sde
		}
		else = {
			add_ideas = GRE_Nikolaos_Plastiras_hog_sde
		}
		add_ideas = {
			GRE_Nikolaos_Plastiras_for_sde
			GRE_Alexandros_Svolos_eco_sde
			GRE_Ioannis_Dourentis_sec_sde
		}
	}
}

# Elections after a monarchist win
country_event = {
	id = gre.51
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.51 FROM = [From.GetName]" }
	title = gre.51.t
	picture = GFX_report_event_AST_election

	desc = {
		text = gre.51.d.noban
		trigger = {
			NOT = {
				has_country_flag = GRE_socialists_banned
			}
		}
	}
	desc = {
		text = gre.51.d.ban
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
	}

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		has_country_flag = GRE_monarchists_win_referendum
		has_capitulated = no
	}

	immediate = {
		remove_all_ministers = yes
		if = {
			limit = {
				date > 1938.1.1
				NOT = {
					has_country_flag = GRE_1938_elections_happened
				}
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		name = gre.51.a #Social Conservative
		ai_chance = {
			base = 40
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
		add_ideas = {
			GRE_Konstantinos_Tsaldaris_hog_sco
			GRE_Sophocles_Venizelos_for_sco
			GRE_Periklis_Rallis_eco_sco
			GRE_Stephanos_Lakiantos_sec_sco
		}
	}
	option = {
		name = gre.51.b #Radical Socialists
		trigger = {
			compare_autonomy_state > kr_occupied_puppet
			NOT = { has_country_flag = GRE_socialists_banned }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_ALEXANDER
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_GEORGE
					}
				}
			}
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_kostas_gavriilides }
			add_ideas = GRE_Kostas_Gavriilides_hog_rso
		}
		else = {
			add_ideas = GRE_Nikos_Ploumpidis_hog_rso
		}
		if = {
			limit = { has_character = GRE_kostas_gavriilides }
			add_ideas = GRE_Nikos_Ploumpidis_for_rso
		}
		else = {
			add_ideas = GRE_Andreas_Tsipas_for_rso
		}
		add_ideas = {
			GRE_Georgios_Vorazanis_eco_rso
			GRE_Loukas_Karliaftis_sec_rso
		}
		GRE_become_syndicalist = yes
		hidden_effect = { news_event = gre.503 }
	}
	option = {
		name = gre.51.c #Social Liberal-Social Democrat coalition
		trigger = {
			NOT = {
				has_country_flag = GRE_socialists_banned
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				OR = {
					has_government = social_liberal
					has_government = social_democrat
				}
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.10
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.10
		}
		set_temp_variable = { coalition_partner_var = token:social_democrat }
		add_to_coalition = yes
		if = {
			limit = { GRE_panagiotis_kanellopoulos = { can_be_country_leader = yes } }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		else = {
			add_ideas = GRE_Georgios_Papandreou_hog_sli
		}
		add_ideas = {
			GRE_Nikolaos_Plastiras_for_sde
			GRE_Alexandros_Svolos_eco_sde
			GRE_Georgios_Athanasiadis_Novas_sec_sli
		}
	}
	option = {
		name = gre.50.b #Social Liberal
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
		if = {
			limit = { GRE_panagiotis_kanellopoulos = { can_be_country_leader = yes } }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		else = {
			add_ideas = GRE_Georgios_Papandreou_hog_sli
		}
		add_ideas = {
			GRE_Constantinos_Rentis_for_sli
			GRE_Georgios_Athanasiadis_Novas_eco_sli
			GRE_Pafsanias_Katsotas_sec_sli
		}
	}
	option = {
		name = gre.50.c #Market Liberal
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Themistoklis_Sofoulis_hog_mli
		}
		else = {
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
		}
		add_ideas = {
			GRE_Emmanouil_Tsouderos_for_mli
			GRE_Stavros_Kostopoulos_eco_mli
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Konstantinos_Tsatsos_sec_mli
		}
		else = {
			add_ideas = GRE_Lambros_Labrianidis_sec_mli
		}
	}
}

# Elections after a republican win
country_event = {
	id = gre.52
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.52 FROM = [From.GetName]" }
	title = gre.52.t
	picture = GFX_report_event_AST_election

	desc = {
		text = gre.52.d.noban
		trigger = {
			NOT = {
				has_country_flag = GRE_socialists_banned
			}
		}
	}
	desc = {
		text = gre.52.d.ban
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
	}

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		NOT = { has_country_flag = GRE_monarchists_win_referendum }
		has_capitulated = no
	}

	immediate = {
		remove_all_ministers = yes
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		name = gre.52.a #Social Conservative
		ai_chance = {
			base = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
		add_ideas = {
			GRE_Konstantinos_Tsaldaris_hog_sco
			GRE_Sophocles_Venizelos_for_sco
			GRE_Periklis_Rallis_eco_sco
			GRE_Stephanos_Lakiantos_sec_sco
		}
	}
	option = {
		name = gre.52.b #Social Liberal
		ai_chance = {
			base = 35
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
		if = {
			limit = { GRE_panagiotis_kanellopoulos = { can_be_country_leader = yes } }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		else = {
			add_ideas = GRE_Georgios_Papandreou_hog_sli
		}
		add_ideas = {
			GRE_Constantinos_Rentis_for_sli
			GRE_Georgios_Athanasiadis_Novas_eco_sli
			GRE_Pafsanias_Katsotas_sec_sli
		}
	}
	option = {
		name = gre.52.c #Market Liberal
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Themistoklis_Sofoulis_hog_mli
		}
		else = {
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
		}
		add_ideas = {
			GRE_Emmanouil_Tsouderos_for_mli
			GRE_Stavros_Kostopoulos_eco_mli
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Konstantinos_Tsatsos_sec_mli
		}
		else = {
			add_ideas = GRE_Lambros_Labrianidis_sec_mli
		}
	}
	option = {
		name = gre.52.e #Syndicalists
		trigger = {
			compare_autonomy_state > kr_occupied_puppet
			NOT = { has_country_flag = GRE_socialists_banned }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_democrat
			}
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_REPUBLIC_WINS_REFERENDUM
				}
			}
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.10
		}
		set_temp_variable = { coalition_partner_var = token:radical_socialist }
		add_to_coalition = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Georgios_Vorazanis_eco_rso
			GRE_Athanasios_Klaras_sec_tot
		}
		GRE_become_syndicalist = yes
		hidden_effect = { news_event = gre.504 }
	}
}

# Elections restoring democracy
country_event = {
	id = gre.53
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.53 FROM = [From.GetName]" }
	title = gre.53.t
	desc = gre.53.d
	picture = GFX_report_event_AST_election

	is_triggered_only = yes

	immediate = {
		remove_all_ministers = yes
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		name = gre.50.a #Social Conservative
		trigger = {
			NOT = {
				has_country_flag = GRE_was_soccon
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_increase_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = 1
				}
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
		add_ideas = {
			GRE_Konstantinos_Tsaldaris_hog_sco
			GRE_Sophocles_Venizelos_for_sco
			GRE_Periklis_Rallis_eco_sco
			GRE_Stephanos_Lakiantos_sec_sco
		}
	}
	option = {
		name = gre.50.b #Social Liberal
		trigger = {
			NOT = {
				has_country_flag = GRE_was_soclib
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
		if = {
			limit = { GRE_panagiotis_kanellopoulos = { can_be_country_leader = yes } }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		else = {
			add_ideas = GRE_Georgios_Papandreou_hog_sli
		}
		add_ideas = {
			GRE_Constantinos_Rentis_for_sli
			GRE_Georgios_Athanasiadis_Novas_eco_sli
			GRE_Pafsanias_Katsotas_sec_sli
		}
	}
	option = {
		name = gre.50.c #Market Liberal
		trigger = {
			NOT = {
				has_country_flag = GRE_was_marklib
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_decrease_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = -1
				}
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Themistoklis_Sofoulis_hog_mli
		}
		else = {
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
		}
		add_ideas = {
			GRE_Emmanouil_Tsouderos_for_mli
			GRE_Stavros_Kostopoulos_eco_mli
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Konstantinos_Tsatsos_sec_mli
		}
		else = {
			add_ideas = GRE_Lambros_Labrianidis_sec_mli
		}
	}
	option = {
		name = gre.50.e #Social Democrats
		trigger = {
			NOT = {
				has_country_flag = GRE_was_socdem
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 5
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_decrease_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = -2
				}
			}
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_alexandros_papanastasiou }
			add_ideas = GRE_Alexandros_Papanastasiou_hog_sde
		}
		else = {
			add_ideas = GRE_Nikolaos_Plastiras_hog_sde
		}
		add_ideas = {
			GRE_Nikolaos_Plastiras_for_sde
			GRE_Alexandros_Svolos_eco_sde
			GRE_Ioannis_Dourentis_sec_sde
		}
	}
}

# Elections after a loss in the Balkan War
country_event = {
	id = gre.54
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.54 FROM = [From.GetName]" }
	title = gre.54.t
	desc = gre.54.d
	picture = GFX_report_event_AST_election

	is_triggered_only = yes

	immediate = {
		remove_all_ministers = yes
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		name = gre.50.a #Social Conservative
		trigger = {
			NOT = {
				has_country_flag = GRE_was_soccon
			}
		}
		ai_chance = {
			base = 35
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_increase_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = 1
				}
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
		add_ideas = {
			GRE_Konstantinos_Tsaldaris_hog_sco
			GRE_Sophocles_Venizelos_for_sco
			GRE_Periklis_Rallis_eco_sco
			GRE_Stephanos_Lakiantos_sec_sco
		}
	}
	option = {
		name = gre.50.b #Social Liberal
		trigger = {
			NOT = {
				has_country_flag = GRE_was_soclib
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
		if = {
			limit = { GRE_panagiotis_kanellopoulos = { can_be_country_leader = yes } }
			add_ideas = GRE_Panagiotis_Kanellopoulos_hog_sli
		}
		else = {
			add_ideas = GRE_Georgios_Papandreou_hog_sli
		}
		add_ideas = {
			GRE_Constantinos_Rentis_for_sli
			GRE_Georgios_Athanasiadis_Novas_eco_sli
			GRE_Pafsanias_Katsotas_sec_sli
		}
	}
	option = {
		name = gre.50.c #Market Liberal
		trigger = {
			NOT = {
				has_country_flag = GRE_was_marklib
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_decrease_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = -1
				}
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Themistoklis_Sofoulis_hog_mli
		}
		else = {
			add_ideas = GRE_Konstantinos_Tsatsos_hog_mli
		}
		add_ideas = {
			GRE_Emmanouil_Tsouderos_for_mli
			GRE_Stavros_Kostopoulos_eco_mli
		}
		if = {
			limit = { has_character = GRE_themistoklis_sofoulis }
			add_ideas = GRE_Konstantinos_Tsatsos_sec_mli
		}
		else = {
			add_ideas = GRE_Lambros_Labrianidis_sec_mli
		}
	}
	option = {
		name = gre.50.e #Social Democrats
		trigger = {
			NOT = {
				has_country_flag = GRE_was_socdem
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 5
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = {
				NOT = {
					has_completed_focus = GRE_monarchy_referendum
				}
			}
			custom_effect_tooltip = GRE_decrease_monarchist
			hidden_effect = {
				modify_country_flag = {
					flag = gre_monarchist_sympathies
					value = -2
				}
			}
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
		if = {
			limit = { has_character = GRE_alexandros_papanastasiou }
			add_ideas = GRE_Alexandros_Papanastasiou_hog_sde
		}
		else = {
			add_ideas = GRE_Nikolaos_Plastiras_hog_sde
		}
		add_ideas = {
			GRE_Nikolaos_Plastiras_for_sde
			GRE_Alexandros_Svolos_eco_sde
			GRE_Ioannis_Dourentis_sec_sde
		}
	}
}


### Monarchy Referendum Events

# Referendum begins
country_event = {
	id = gre.100
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.100 FROM = [From.GetName]" }
	title = gre.100.t
	desc = gre.100.d
	picture = GFX_report_event_GRE_referendum

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		name = gre.100.a
		add_stability = -0.05
		hidden_effect = {
			country_event = { id = gre.101 days = 5 } #Monarchist pamphlets
			country_event = { id = gre.102 days = 15 } #Republican campaign
			country_event = { id = gre.103 days = 25 } #Aristrocrat lobbying
			country_event = { id = gre.104 days = 35 } #Socialist speech
			country_event = { id = gre.105 days = 45 } #Pro-Monarchist Riot
			country_event = { id = gre.106 days = 45 } #Pro-Republican Riot
			country_event = { id = gre.107 days = 55 } #Monarchists might win?
			country_event = { id = gre.108 days = 55 } #Republicans might win?
		}
	}
}

# Monarchist pamphlets
country_event = {
	id = gre.101
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.101 FROM = [From.GetName]" }
	title = gre.101.t
	desc = gre.101.d
	picture = GFX_report_event_generic_rally2

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		name = gre.101.a #Allow them to distribute
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
		}
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
	option = {
		name = gre.101.b #We must suppress this nonsense
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Republican campaign
country_event = {
	id = gre.102
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.102 FROM = [From.GetName]" }
	title = gre.102.t
	desc = gre.102.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		name = gre.102.a # Yes, we should fund this
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -3
			}
		}
	}
	option = {
		name = gre.102.b # No, we should not get involved
		ai_chance = {
			base = 50
		}
	}
	option = {
		name = gre.102.c # Discourage this talk within our government
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
		}
		add_political_power = -25
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Aristocratic lobbying
country_event = {
	id = gre.103
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.103 FROM = [From.GetName]" }
	title = gre.103.t
	desc = gre.103.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		name = gre.103.a # We'll allow it
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
		}
		add_political_power = 25
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
	option = {
		name = gre.103.b # Place a moratorium on this lobbying
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Socialist speech
country_event = {
	id = gre.104
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.104 FROM = [From.GetName]" }
	title = gre.104.t
	desc = gre.104.d
	picture = GFX_report_event_GRE_zachariadis

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		name = gre.104.a # Allow it to proceed
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.03
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -2
			}
		}
	}
	option = {
		name = gre.104.b # Send in the police to break it up
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Pro-Monarchist riot
country_event = {
	id = gre.105
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.105 FROM = [From.GetName]" }
	title = gre.105.t
	desc = gre.105.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_country_flag = {
			flag = gre_monarchist_sympathies
			value < 2
		}
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		name = gre.105.a # Keep it contained, but use leniency
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.2
				has_government = social_democrat
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 2
			}
		}
	}
	option = {
		name = gre.105.b # Shut this down with extreme prejudice
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_liberal
			}
			modifier = {
				factor = 0.2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				has_government = market_liberal
			}
		}
		add_stability = -0.06
		decrease_ruling_party_popularity_by_10 = yes
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -1
			}
		}
	}
}

# Pro-Republican riot
country_event = {
	id = gre.106
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.106 FROM = [From.GetName]" }
	title = gre.106.t
	desc = gre.106.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_country_flag = {
			flag = gre_monarchist_sympathies
			value > 4
		}
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		name = gre.105.a # Keep it contained, but use leniency
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				has_government = market_liberal
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_decrease_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = -3
			}
		}
	}
	option = {
		name = gre.105.b # Shut this down with extreme prejudice
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_liberal
			}
			modifier = {
				factor = 0.2
				has_government = social_democrat
			}
		}
		add_stability = -0.06
		decrease_ruling_party_popularity_by_10 = yes
		custom_effect_tooltip = GRE_increase_monarchist
		hidden_effect = {
			modify_country_flag = {
				flag = gre_monarchist_sympathies
				value = 1
			}
		}
	}
}

# Monarchists might win?
country_event = {
	id = gre.107
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.107 FROM = [From.GetName]" }
	title = gre.107.t
	desc = gre.107.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	trigger = {
		OR = {
			has_country_flag = { flag = gre_monarchist_sympathies value > 0 }
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_METAXAS_OVERTHROWS_REPUBLIC
			}
		}
		focus_progress = { focus = GRE_monarchy_referendum progress > 0 }
		has_elected_government = yes
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
			}
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_MONARCHY_RESTORED_ALEXANDER
			}
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_MONARCHY_RESTORED_GEORGE
			}
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_REPUBLIC_WINS_REFERENDUM
			}
		}
	}

	option = {
		name = gre.107.a # We need to rig the outcome in favor of the republic
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_conservative
				NOT = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_METAXAS_OVERTHROWS_REPUBLIC
					}
				}
			}
			modifier = {
				factor = 0.5
				has_government = social_liberal
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
		}
		custom_effect_tooltip = GRE_rigged_for_republic
		set_country_flag = GRE_republic_rig
	}
	option = {
		name = gre.107.b # Might win? We must rig the referendum to ensure it
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_democrat
			}
			modifier = {
				factor = 0.5
				OR = {
					has_government = social_liberal
					has_government = market_liberal
				}
			}
			modifier = {
				factor = 2
				has_government = social_conservative
			}
			modifier = {
				factor = 0.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 3
				}
			}
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_METAXAS_OVERTHROWS_REPUBLIC
				}
			}
		}
		custom_effect_tooltip = GRE_rigged_for_monarchy
		set_country_flag = GRE_monarchy_rig
	}
	option = {
		name = gre.107.c # Do nothing - we will accept the legitimate results
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_METAXAS_OVERTHROWS_REPUBLIC
				}
			}
		}
	}
}

# Republicans might win?
country_event = {
	id = gre.108
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.108 FROM = [From.GetName]" }
	title = gre.108.t
	desc = gre.108.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	trigger = {
		OR = {
			has_country_flag = { flag = gre_monarchist_sympathies value < 1 }
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
			}
		}
		focus_progress = { focus = GRE_monarchy_referendum progress > 0 }
		has_elected_government = yes
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_METAXAS_OVERTHROWS_REPUBLIC
			}
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_MONARCHY_RESTORED_ALEXANDER
			}
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_MONARCHY_RESTORED_GEORGE
			}
			has_game_rule = {
				rule = GRE_referendum_result
				option = GRE_REPUBLIC_WINS_REFERENDUM
			}
		}
	}

	option = {
		name = gre.108.a # We need to rig the outcome in favor of the monarchy
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_democrat
				OR = {
					has_government = social_democrat
					has_government = social_liberal
					has_government = market_liberal
				}
				NOT = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
					}
				}
			}
			modifier = {
				factor = 0.5
				OR = {
					has_government = social_liberal
					has_government = market_liberal
				}
				NOT = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
					}
				}
			}
			modifier = {
				factor = 2
				has_government = social_conservative
			}
		}
		custom_effect_tooltip = GRE_rigged_for_monarchy
		set_country_flag = GRE_monarchy_rig
	}
	option = {
		name = gre.107.b # Might win? We must rig the referendum to ensure it
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 0.5
				has_government = social_liberal
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
			modifier = {
				factor = 0.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -2
				}
			}
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
				}
			}
		}
		custom_effect_tooltip = GRE_rigged_for_republic
		set_country_flag = GRE_republic_rig
	}
	option = {
		name = gre.107.c # Do nothing - we will accept the legitimate results
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
				}
			}
		}
	}
}

# Referendum occurs
country_event = {
	id = gre.109
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.109 FROM = [From.GetName]" }
	title = gre.109.t
	desc = gre.109.d
	picture = GFX_report_event_GRE_referendum

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_monarchists_win_referendum
		}
	}

	option = {
		name = gre.109.a
		if = {
			limit = {
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = GRE_monarchy_rig
				}
			}
			custom_effect_tooltip = GRE_referendum_is_rigged
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = GRE_republic_rig
				}
				OR = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_ALEXANDER
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_GEORGE
					}
				}
			}
			custom_effect_tooltip = GRE_monarchy_guaranteed
		}
		else_if = {
			limit = {
				NOT = {
					has_country_flag = GRE_monarchy_rig
				}
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_REPUBLIC_WINS_REFERENDUM
					}
				}
			}
			custom_effect_tooltip = GRE_republic_guaranteed
		}
		else_if = {
			limit = {
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 2
				}
			}
			custom_effect_tooltip = GRE_monarchy_likely
		}
		else_if = {
			limit = {
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -1
				}
			}
			custom_effect_tooltip = GRE_republic_likely
		}
		else = {
			custom_effect_tooltip = GRE_referendum_close
		}
		hidden_effect = {
			country_event = { id = gre.110 days = 3 }
		}
	}
}

# Bounce event to determine victor
country_event = {
	id = gre.110
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.110 FROM = [From.GetName]" }
	hidden = yes
	is_triggered_only = yes

	option = { #Republicans win
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_ALEXANDER
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_GEORGE
					}
				}
				NOT = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_REPUBLIC_WINS_REFERENDUM
					}
				}
			}
			modifier = {
				factor = 1.2
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 0
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -2
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -1
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -3
				}
			}
			modifier = {
				factor = 2.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -2
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -4
				}
			}
			modifier = {
				factor = 2.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -3
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -5
				}
			}
			modifier = {
				factor = 3.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -4
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -6
				}
			}
		}
		country_event = gre.111
	}
	option = { #Monarchists win
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_REPUBLIC_WINS_REFERENDUM
					}
				}
				NOT = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_ALEXANDER
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_MONARCHY_RESTORED_GEORGE
					}
				}
			}
			modifier = {
				factor = 1.2
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 0
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 2
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 1
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 3
				}
			}
			modifier = {
				factor = 2.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 2
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 4
				}
			}
			modifier = {
				factor = 2.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 3
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 5
				}
			}
			modifier = {
				factor = 3.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 4
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 6
				}
			}
		}
		country_event = gre.112
	}
}

# Republican victory
country_event = {
	id = gre.111
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.111 FROM = [From.GetName]" }
	title = gre.111.t
	desc = gre.111.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_monarchists_win_referendum
		}
	}

	option = {
		name = gre.111.a
		set_country_flag = GRE_republicans_win_referendum
		add_stability = 0.05
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = GRE_republic_rig
					has_character = GRE_ioannis_metaxas
				}
				country_event = { id = gre.113 days = 3 }
			}
			news_event = gre.509
		}
	}
}

# Monarchist victory
country_event = {
	id = gre.112
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.112 FROM = [From.GetName]" }
	title = gre.112.t
	desc = gre.112.d
	picture = GFX_report_event_GRE_royal

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_monarchists_win_referendum
		}
	}

	option = {
		name = gre.112.a
		set_country_flag = GRE_monarchists_win_referendum
		add_stability = 0.05
		hidden_effect = {
			if = {
				limit = { has_country_flag = GRE_monarchy_rig }
				country_event = { id = gre.113 days = 3 }
			}
		}
	}
}

# Bounce effect to determine whether rig was discovered
country_event = {
	id = gre.113
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.113 FROM = [From.GetName]" }
	title = gre.113.t
	picture = GFX_report_event_GRE_crowd2

	desc = {
		text = gre.113.d.monarchist
		trigger = {
			has_country_flag = GRE_monarchists_win_referendum
		}
	}
	desc = {
		text = gre.113.d.republican
		trigger = {
			has_country_flag = GRE_republicans_win_referendum
		}
	}

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
	}

	option = {
		name = gre.113.a # The rigging is discovered!
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_war = yes
				NOT = {
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_METAXAS_OVERTHROWS_REPUBLIC
					}
					has_game_rule = {
						rule = GRE_referendum_result
						option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 2
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 3
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 4
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -2
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -3
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -4
					}
				}
			}
			modifier = {
				factor = 1.5
				GRE = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
				}
			}
		}
		if = {
			limit = { has_country_flag = GRE_republic_rig }
			country_event = { id = gre.114 hours = 3 }
			else = {
				country_event = { id = gre.115 hours = 3 }
			}
		}
	}
	option = {
		name = gre.113.b # No evidence is uncovered and the protests die down
		ai_chance = {
			base = 75
			modifier = {
				factor = 0
				has_country_flag = GRE_republic_rig
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_METAXAS_OVERTHROWS_REPUBLIC
				}
			}
			modifier = {
				factor = 0
				has_country_flag = GRE_monarchy_rig
				has_game_rule = {
					rule = GRE_referendum_result
					option = GRE_SYNDICALISTS_OVERTHROW_MONARCHY
				}
			}
		}
		add_political_power = -100
		add_stability = -0.05
	}
}

# Metaxas overthrows a rigged republic vote
country_event = {
	id = gre.114
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.114 FROM = [From.GetName]" }
	title = gre.114.t
	desc = gre.114.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	trigger = {
		has_character = GRE_ioannis_metaxas
	}

	option = {
		name = gre.114.a
		clr_country_flag = GRE_republicans_win_referendum
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = {
				is_subject = yes
			}
			overlord = {
				country_event = { id = gre.116 days = 1 }
				set_autonomy = {
					target = GRE
					autonomy_state = autonomy_free
				}
			}
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = {
					is_in_faction_with = SER
				}
			}
			leave_faction = yes
		}
		if = {
			limit = {
				has_war = yes
			}
			# first peace out with faction leaders
			every_enemy_country = {
				limit = {
					is_faction_leader = yes
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				white_peace_with_ROOT = yes
			}
			# then all non-puppets who aren't in factions
			every_enemy_country = {
				limit = {
					is_in_faction = no
					is_subject = no
					NOT = {
						AND = {
							has_war_with = SER
							GRE = {
								is_in_faction_with = SER
							}
						}
						any_owned_state = {
							is_claim_or_core_of_ROOT = yes
						}
						any_allied_country = {
							any_owned_state = {
								is_claim_or_core_of_ROOT = yes
							}
						}
					}
				}
				white_peace_with_ROOT = yes
			}
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Ioannis_Metaxas_hog_pau
			GRE_Alexandros_Korizis_for_pau
			GRE_Anastasios_Michalakopoulos_eco_pau
			GRE_Konstantinos_Maniadakis_sec_pau
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.10
		}
		hidden_effect = { news_event = gre.505 }
	}
}

# Syndicalists overthrow a rigged monarchy vote
country_event = {
	id = gre.115
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.115 FROM = [From.GetName]" }
	title = gre.115.t
	desc = gre.115.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		name = gre.114.a
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Konstantinos_Speras_for_syn
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Athanasios_Klaras_sec_tot
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		GRE_become_syndicalist = yes
		hidden_effect = { news_event = gre.506 }
	}
}

# Greece breaks puppet status after coup
country_event = {
	id = gre.116
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.116 FROM = [From.GetName]" }
	title = gre.116.t
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	trigger = {
		NOT = {
			is_in_faction_with = GRE
		}
	}

	desc = {
		text = gre.116.d.metaxas
		trigger = {
			FROM = {
				has_government = paternal_autocrat
			}
		}
	}
	desc = {
		text = gre.116.d.syndicalist
		trigger = {
			FROM = {
				has_government = syndicalist
			}
		}
	}

	immediate = {
		add_opinion_modifier = {
			target = GRE
			modifier = KR_outraged
		}
	}

	option = {
		name = gre.116.a #They cannot escape so easily
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 0
				has_elected_government = yes
			}
		}
		create_wargoal = {
			type = annex_everything
			target = GRE
		}
	}
	option = {
		name = gre.116.b #We have little choice but to let them be
		ai_chance = {
			base = 70
			modifier = {
				factor = 0.5
				has_authoritarian_government = yes
			}
		}
		add_political_power = -50
	}
}

# Question of Monarchists (fired by focus)
country_event = {
	id = gre.117
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.117 FROM = [From.GetName]" }
	title = gre.117.t
	desc = gre.117.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	option = {
		name = gre.117.a #Purging them is the only way
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
		}
		add_stability = -0.05
		add_political_power = 50
		add_popularity = {
			ideology = social_conservative
			popularity = -0.10
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = -0.10
		}
	}
	option = {
		name = gre.117.b #Let them remain - the question is settled
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				has_government = social_liberal
			}
		}
		add_stability = 0.05
		add_political_power = -100
	}
}

# Question of Republicans (fired by focus)
country_event = {
	id = gre.118
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.118 FROM = [From.GetName]" }
	title = gre.118.t
	desc = gre.118.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	option = {
		name = gre.117.a #Purging them is the only way
		ai_chance = {
			base = 50
		}
		add_stability = -0.05
		add_political_power = 50
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.10
		}
	}
	option = {
		name = gre.117.b #Let them remain - the question is settled
		ai_chance = {
			base = 50
		}
		add_stability = 0.05
		add_political_power = -100
	}
}

# Rise of the radical socialists after monarchist win
country_event = {
	id = gre.119
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.119 FROM = [From.GetName]" }
	title = gre.119.t
	desc = gre.119.d
	picture = GFX_report_event_GRE_zachariadis

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_monarchists_win_referendum
		has_completed_focus = GRE_monarchy_referendum
		has_elected_government = yes
	}

	mean_time_to_happen = {
		days = 15
	}

	option = {
		name = gre.119.a #Rather worrying...
		add_stability = -0.05
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.10
		}
		hidden_effect = {
			country_event = { id = gre.120 days = 10 }
		}
	}
	option = {
		name = gre.119.b #Ban them from the election
		custom_effect_tooltip = GRE_socialists_banned_elections
		set_country_flag = GRE_socialists_banned
		add_stability = -0.10
	}
}

# Liberals and moderate socialists form coalition
country_event = {
	id = gre.120
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.120 FROM = [From.GetName]" }
	title = gre.120.t
	desc = gre.120.d
	picture = GFX_report_event_GRE_papandreou

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
	}

	option = {
		name = gre.120.a
		add_popularity = {
			ideology = social_liberal
			popularity = 0.03
		}
	}
}

# Left unites after republican win
country_event = {
	id = gre.121
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.121 FROM = [From.GetName]" }
	title = gre.121.t
	desc = gre.121.d
	picture = GFX_report_event_GRE_zachariadis

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		has_country_flag = GRE_republicans_win_referendum
	}

	mean_time_to_happen = {
		days = 15
	}

	option = {
		name = gre.121.a
		add_stability = -0.05
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
	}
	option = {
		name = gre.121.b #Ban them from the election
		custom_effect_tooltip = GRE_socialists_banned_elections
		set_country_flag = GRE_socialists_banned
		add_stability = -0.10
	}
}

# Civil war begins after socialists are banned from the elections
country_event = {
	id = gre.122
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.122 FROM = [From.GetName]" }
	title = gre.122.t
	desc = gre.122.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_socialists_banned
		has_democratic_government = yes
		surrender_progress < 0.01
		owns_state = 768 #Thessaly
		NOT = { has_country_flag = GRE_had_civil_war }
	}

	mean_time_to_happen = {
		months = 1
	}

	immediate = {
		set_country_flag = GRE_had_civil_war
		hidden_effect = { country_lock_all_division_template = yes }
	}

	option = {
		name = gre.122.a
		hidden_effect = { country_lock_all_division_template = no }
		if = {
			limit = {
				is_in_faction = yes
				is_subject = no
			}
			set_variable = { GRE_previous_faction_leader = faction_leader }
			leave_faction = yes
		}
		start_civil_war = {
			### basics ###
			ideology = syndicalist
			size = 0.5
			navy_ratio = 0

			### states ###
			capital = 768
			states = { 185 731 768 1076 }

			### country leader ###
			keep_political_party_members = yes

			### unit leaders ###
			keep_unit_leaders_trigger = {
				NOT = {	has_character_flag = GRE_socialist }
			}

			### effects ###
			hidden_effect = {
				GRE_become_syndicalist = yes
				GRE_uncomplete_focuses = yes
				GRE_uncomplete_expansion_focuses = yes
				set_cosmetic_tag = GRE_civil_war_socialist
				copy_popularities_of_ROOT = yes
				add_popularity = { ideology = syndicalist popularity = 0.35 }
			}
		}
		if = {
			limit = { has_war_with = BUL }
			BUL = { country_event =  bulfor.38 }
		}
	}
}

### SYNDICALIST EVENTS

# First Hellenic Congress (fired by focus)
country_event = {
	id = gre.150
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.150 FROM = [From.GetName]" }
	title = gre.150.t
	desc = gre.150.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		name = gre.150.a # Zachariadis remains in control
		add_stability = 0.05
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = syndicalist
					last_election = "[CURRENT_DATE]"
					election_frequency = 48
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
	}
	option = {
		name = gre.150.b # Athanasios Klaras commands the room, in the end
		remove_all_ministers = yes
		add_ideas = {
			GRE_Athanasios_Klaras_hog_tot
			GRE_Stephanos_Sarafis_for_tot
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Georgios_Siantos_sec_tot
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.10
		}
	}
}

# Establishing the Communes (fired by focus)
country_event = {
	id = gre.151
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.151 FROM = [From.GetName]" }
	title = gre.151.t
	desc = gre.151.d
	picture = GFX_report_event_GRE_demonstration

	is_triggered_only = yes

	option = {
		name = gre.151.a #Expand the industrial base, regardless of the cost
		add_stability = -0.10
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = industrial_complex size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.151.b #Ease the country into this, with incentives
		add_stability = 0.10
		add_political_power = -50
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = industrial_complex size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.151.c #The unions must drive this change - let them take charge
		add_stability = 0.05
		add_political_power = 50
		add_ideas = GRE_unions_in_charge
	}
}

# Rebuilding the Nation (fired by focus)
country_event = {
	id = gre.152
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.152 FROM = [From.GetName]" }
	title = gre.152.t
	desc = gre.152.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		name = gre.152.a #We must build our military power
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.152.b #A strong civilian industry will be our foundation
		add_ideas = GRE_totalist_industry
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = industrial_complex size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = industrial_complex size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
	option = {
		name = gre.152.c #Unity is more important than the economy
		add_ideas = GRE_secret_police
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = arms_factory size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = arms_factory
				level = 1
				instant_build = yes
			}
		}
		random_owned_controlled_state = {
			limit = {
				is_core_of = ROOT
				is_valid_state_for_development = yes
				free_building_slots = { building = industrial_complex size > 0 include_locked = yes }
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
}

# Syndicalists march after Black Friday
country_event = {
	id = gre.153
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.153 FROM = [From.GetName]" }
	title = gre.153.t
	desc = gre.153.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	option = {
		name = gre.153.a #Crack down on these rabble-rousers
		add_stability = -0.08
	}
	option = {
		name = gre.153.b #Keep them contained, but we want no violence
		add_political_power = -50
		add_popularity = {
			ideology = syndicalist
			popularity = 0.06
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.03
		}
	}
}

# Farmers march after Black Friday
country_event = {
	id = gre.154
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.154 FROM = [From.GetName]" }
	title = gre.154.t
	desc = gre.154.d
	picture = GFX_report_event_GRE_riot

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_idea = GRE_black_monday_1
		has_elected_government = yes
	}

	mean_time_to_happen = {
		days = 10
	}

	option = {
		name = gre.154.a
		add_stability = -0.03
		add_popularity = {
			ideology = social_democrat
			popularity = 0.02
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.03
		}
		hidden_effect = {
			country_event = { id = gre.153 days = 15 }
		}
	}
}

# Plot to replace Athanasios Klaras
country_event = {
	id = gre.155
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.155 FROM = [From.GetName]" }
	title = gre.155.t
	desc = gre.155.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_leader = { character = GRE_athanasios_klaras }
		date > 1941.1.1
	}

	mean_time_to_happen = {
		months = 10
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_character = GRE_georgios_siantos } }
				event_target:GRE_georgios_siantos_target = { set_nationality = PREV }
			}
		}
	}

	option = {
		name = gre.155.a #Georgios Santos takes over party leadership
		ai_chance = {
			base = 75
		}
		add_stability = -0.10
		promote_character = GRE_georgios_siantos
		if = {
			limit = { has_idea = GRE_Athanasios_Klaras_hog_tot }
			add_ideas = GRE_Georgios_Siantos_hog_tot
		}
		if = {
			limit = { has_idea = GRE_Georgios_Siantos_sec_tot }
			hidden_effect = { remove_ideas_with_trait = security_minister }
			add_ideas = GRE_Giannes_Ioannides_sec_tot
		}
	}
	option = {
		name = gre.155.b #Siantos is executed - Athanasios Klaras rules
		ai_chance = {
			base = 25
		}
		if = {
			limit = { has_character = GRE_georgios_siantos }
			retire_character = GRE_georgios_siantos
		}
		add_political_power = -100
		if = {
			limit = { has_idea = GRE_Georgios_Siantos_sec_tot }
			hidden_effect = { remove_ideas_with_trait = security_minister }
			add_ideas = GRE_Markos_Vaphiadis_sec_tot
		}
	}
}

# Second Hellenic Congress
country_event = {
	id = gre.156
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.156 FROM = [From.GetName]" }
	title = gre.156.t
	desc = gre.156.d
	picture = GFX_report_event_AST_federationalist

	is_triggered_only = yes

	trigger = {
		has_government = syndicalist
		NOT = { has_country_flag = GRE_had_second_congress }
	}

	immediate = {
		set_country_flag = GRE_had_second_congress
		hidden_effect = {
			if = {
				limit = { NOT = { has_character = GRE_konstantinos_speras } }
				event_target:GRE_konstantinos_speras_target = { set_nationality = PREV }
			}
		}
	}

	option = {
		name = gre.156.a #Zachariadis ushers in a new cabinet and retains control
		add_stability = 0.05
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Zachariadis_hog_syn
			GRE_Stephanos_Sarafis_for_tot
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Ioannis_Passalidis_sec_syn
		}
	}
	option = {
		name = gre.156.b #Konstantinos Speras wins the most votes and becomes chairman
		add_political_power = 75
		promote_character = GRE_konstantinos_speras
		remove_all_ministers = yes
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Nikos_Beloyannis_eco_syn
			GRE_Loukas_Karliaftis_sec_rso
		}
	}
}

# Third Hellenic Congress
country_event = {
	id = gre.157
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.157 FROM = [From.GetName]" }
	title = gre.157.t
	picture = GFX_report_event_AST_federationalist

	desc = {
		text = gre.157.d.zach
		trigger = {
			has_country_leader = { character = GRE_nikos_zachariadis }
		}
	}
	desc = {
		text = gre.157.d.notzach
		trigger = {
			NOT = { has_country_leader = { character = GRE_nikos_zachariadis } }
		}
	}

	is_triggered_only = yes

	trigger = {
		has_government = syndicalist
		has_country_flag = GRE_had_second_congress
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_character = GRE_konstantinos_speras } }
				event_target:GRE_konstantinos_speras_target = { set_nationality = PREV }
			}
		}
	}

	option = {
		name = gre.157.a #Konstantinos Speras maintains control
		trigger = {
			NOT = { has_country_leader = { character = GRE_nikos_zachariadis } }
		}
		ai_chance = {
			base = 40
		}
		add_stability = 0.05
		remove_all_ministers = yes
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Stamatios_Chatzimpeis_eco_tot
			GRE_Loukas_Karliaftis_sec_rso
		}
	}
	option = {
		name = gre.157.b #Konstantinos Speras wins the majority of the vote
		trigger = {
			has_country_leader = { character = GRE_nikos_zachariadis }
		}
		ai_chance = {
			base = 40
		}
		add_political_power = 50
		promote_character = GRE_konstantinos_speras
		remove_all_ministers = yes
		add_ideas = {
			GRE_Konstantinos_Speras_hog_syn
			GRE_Ion_Dragoumis_for_syn
			GRE_Stamatios_Chatzimpeis_eco_tot
			GRE_Loukas_Karliaftis_sec_rso
		}
	}
	option = {
		name = gre.157.c #Upstart Nikos Beloyannis wins over the council
		ai_chance = {
			base = 60
		}
		add_political_power = 75
		add_country_leader_role = {
			character = GRE_nikos_beloyannis
			country_leader = { ideology = syndicalist_subtype }
			promote_leader = yes
		}
		remove_all_ministers = yes
		add_ideas = {
			GRE_Nikos_Beloyannis_hog_syn
			GRE_Nikos_Ploumpidis_for_rso
			GRE_Leonidas_Strigkos_eco_syn
			GRE_Evristheas_Magiakos_sec_syn
		}
	}
}

# Metaxas tries to overthrow the syndicalists not long after they take power
country_event = {
	id = gre.158
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.158 FROM = [From.GetName]" }
	title = gre.158.t
	desc = gre.158.d
	picture = GFX_report_event_GRE_metaxas

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_character = GRE_ioannis_metaxas
		has_socialist_government = yes
		surrender_progress < 0.01
		owns_state = 768 #Thessaly
		NOT = { has_country_flag = GRE_had_civil_war }
	}

	mean_time_to_happen = {
		months = 1
	}

	immediate = {
		set_country_flag = GRE_had_civil_war
		hidden_effect = { country_lock_all_division_template = yes }
	}

	option = {
		name = gre.158.a
		hidden_effect = {
			country_lock_all_division_template = no
			set_cosmetic_tag = GRE_civil_war_socialist
		}
		if = {
			limit = {
				is_in_faction = yes
				is_subject = no
			}
			set_variable = { GRE_previous_faction_leader = faction_leader }
			leave_faction = yes
		}
		start_civil_war = {
			### basics ###
			ideology = paternal_autocrat
			size = 0.5
			navy_ratio = 0

			### states ###
			capital = 768
			states = { 185 731 768 1076 }

			### country leader ###
			keep_political_party_members = yes

			### unit leaders ###
			keep_unit_leaders_trigger = {
				NOT = {	has_character_flag = GRE_royalist }
			}

			### effects ###
			hidden_effect = {
				set_cosmetic_tag = GRE_civil_war
				promote_character = GRE_ioannis_metaxas
				GRE_stop_being_syndicalist = yes
				GRE_uncomplete_focuses = yes
				GRE_uncomplete_expansion_focuses = yes
				copy_popularities_of_ROOT = yes
				add_popularity = { ideology = paternal_autocrat popularity = 0.35 }
			}
		}
		if = {
			limit = { has_war_with = BUL }
			BUL = { country_event =  bulfor.38 }
		}
	}
}

### DIPLOMATIC PATH EVENTS

# Thawing relations with the Turks (fired by focus)
country_event = {
	id = gre.200
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.200 FROM = [From.GetName]" }
	title = gre.200.t
	desc = gre.200.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.200.a #We welcome better relations with the Greeks
		ai_chance = {
			base = 70
			modifier = {
				factor = 0.5
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
		}
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_diplomatic_mission
		}
		GRE = {
			country_event = { id = gre.201 days = 3 }
		}
	}
	option = {
		name = gre.200.b #No, we've no need for this
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				has_government = national_populist
			}
			modifier = {
				factor = 0
				has_elected_government = yes
				GRE = {
					has_elected_government = yes
				}
			}
		}
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_no_peace
		}
		GRE = {
			country_event = { id = gre.202 days = 3 }
		}
	}
}

# The Turks agree to diplomacy
country_event = {
	id = gre.201
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.201 FROM = [From.GetName]" }
	title = gre.201.t
	desc = gre.201.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = GRE
			}
		}
	}

	option = {
		name = gre.201.a
		set_country_flag = GRE_has_thaw_with_turks
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
	}
}

# The Turks reject diplomacy
country_event = {
	id = gre.202
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.202 FROM = [From.GetName]" }
	title = gre.202.t
	desc = gre.202.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = GRE
			}
		}
	}

	option = {
		name = gre.202.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# Greeks seek treaty of cooperation with the Turks
country_event = {
	id = gre.203
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.203 FROM = [From.GetName]" }
	title = gre.203.t
	desc = gre.203.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.203.a #We agree to their terms
		ai_chance = {
			base = 50
			modifier = {
				factor = 1.5
				GRE = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 0.1
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				tag = TUR
				OR = {
					has_war = no
					surrender_progress < 0.10
				}
			}
		}
		add_political_power = 100
		diplomatic_relation = {
			country = GRE
			relation = non_aggression_pact
		}
		if = {
			limit = { GRE = { owns_state = 184 } } #Western Thrace
			remove_state_core = 184
		}
		if = {
			limit = { owns_state = 164 } #Dodecanese
			remove_state_core = 164
			GRE = { transfer_state = 164 }
		}
		if = {
			limit = { owns_state = 187 } #Aegean Islands
			remove_state_core = 187
			GRE = { transfer_state = 187 }
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		GRE = {
			country_event = { id = gre.208 days = 3 }
		}
	}
	option = {
		name = gre.203.b #We agree to everything but surrendering land
		trigger = {
			any_owned_state = {
				is_core_of = GRE
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 0.5
				tag = TUR
				OR = {
					has_war = no
					surrender_progress < 0.10
				}
			}
		}
		GRE = {
			country_event = { id = gre.204 days = 3 }
		}
	}
	option = {
		name = gre.203.c #No, they are asking for far too much
		ai_chance = {
			base = 10
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 10
				tag = TUR
				OR = {
					has_war = no
					surrender_progress < 0.10
				}
			}
		}
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		GRE = {
			country_event = { id = gre.207 days = 3 }
		}
	}
}

# The Turks refuse to exchange cores
country_event = {
	id = gre.204
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.204 FROM = [From.GetName]" }
	title = gre.204.t
	desc = gre.204.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.204.a #Then there's no deal
		ai_chance = {
			base = 75
		}
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		FROM = {
			country_event = { id = gre.205 days = 3 }
		}
	}
	option = {
		name = gre.204.b #Very well, we'll work with that
		ai_chance = {
			base = 25
		}
		effect_tooltip = {
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		hidden_effect = {
			set_country_flag = GRE_no_surrender_claims
			FROM = {
				save_event_target_as = turks
			}
			country_event = { id = gre.209 days = 30 }
		}
		FROM = {
			country_event = { id = gre.206 days = 3 }
		}
	}
}

# The Greeks refuse to agree to the modified deal
country_event = {
	id = gre.205
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.205 FROM = [From.GetName]" }
	title = gre.205.t
	desc = gre.205.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.205.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# The Greeks agree to the modified deal
country_event = {
	id = gre.206
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.206 FROM = [From.GetName]" }
	title = gre.206.t
	desc = gre.206.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.206.a
		add_political_power = 100
		set_country_flag = GRE_no_surrender_claims
		diplomatic_relation = {
			country = GRE
			relation = non_aggression_pact
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
	}
}

# The Turks refuse the deal
country_event = {
	id = gre.207
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.207 FROM = [From.GetName]" }
	title = gre.207.t
	desc = gre.207.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.207.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# The Turks agree to the full deal
country_event = {
	id = gre.208
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.208 FROM = [From.GetName]" }
	title = gre.208.t
	desc = gre.208.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.208.a
		add_political_power = 100
		every_owned_state = {
			limit = {
				is_core_of = FROM
			}
			FROM = {
				transfer_state = PREV
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		hidden_effect = {
			FROM = {
				save_event_target_as = turks
			}
			country_event = { id = gre.209 days = 30 }
		}
	}
}

# Population Exchange
country_event = {
	id = gre.209
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.209 FROM = [From.GetName]" }

	hidden = yes
	is_triggered_only = yes

	trigger = {
		country_exists = event_target:turks
		NOT = {
			has_war_with = event_target:turks
		}
	}

	immediate = {
		set_variable = {
			var = popmove
			value = 0
		}
		event_target:turks = {
			set_variable = {
				var = popmove
				value = 0
			}
		}

		#Greek side
		if = {
			limit = { owns_state = 184 } #Thrace
			set_temp_variable = {
				temp1 = 184.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.5
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			184 = {
				add_manpower = temp1
			}
		}
		if = {
			limit = { owns_state = 769 } #Eastern Macedonia
			set_temp_variable = {
				temp1 = 769.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.5
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			769 = {
				add_manpower = temp1
			}
		}
		if = {
			limit = { owns_state = 187 } #Aegean Islands
			set_temp_variable = {
				temp1 = 187.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.3
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			187 = {
				add_manpower = temp1
			}
		}
		if = {
			limit = { owns_state = 182 } #Crete
			set_temp_variable = {
				temp1 = 182.state_population
			}
			multiply_temp_variable = {
				temp1 = 0.2
			}
			add_to_variable = {
				event_target:turks.popmove = temp1
			}
			multiply_temp_variable = {
				temp1 = -1
			}
			182 = {
				add_manpower = temp1
			}
		}

		#Turkish side
		event_target:turks = {
			if = {
				limit = { owns_state = 773 } #Constantinople
				773 = {
					add_manpower = -40000
				}
				add_to_variable = {
					ROOT.popmove = 40000
				}
			}
			if = {
				limit = { owns_state = 341 } #Edirne
				set_temp_variable = {
					temp1 = 341.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.35
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				341 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 340 } #Bursa
				set_temp_variable = {
					temp1 = 340.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.23
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				340 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 339 } #Izmir
				set_temp_variable = {
					temp1 = 339.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.23
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				339 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 356 } #Sinop
				set_temp_variable = {
					temp1 = 356.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.13
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				356 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 355 } #Samsun
				set_temp_variable = {
					temp1 = 355.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.13
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				355 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 187 } #Aegean
				set_temp_variable = {
					temp1 = 187.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.40
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				187 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 182 } #Crete
				set_temp_variable = {
					temp1 = 182.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.40
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				182 = {
					add_manpower = temp1
				}
			}
			if = {
				limit = { owns_state = 184 } #Eastern Macedonia
				set_temp_variable = {
					temp1 = 184.state_population
				}
				multiply_temp_variable = {
					temp1 = 0.40
				}
				add_to_variable = {
					ROOT.popmove = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				184 = {
					add_manpower = temp1
				}
			}
		}

		round_variable = ROOT.popmove
		round_variable = event_target:turks.popmove

		# Now fire follow-up events
		event_target:turks = {
			country_event = gre.210
		}
		country_event = gre.211
	}
}

# Turkish part of population exchange
country_event = {
	id = gre.210
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.210 FROM = [From.GetName]" }
	title = gre.210.t
	desc = gre.210.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		name = gre.210.a
		add_stability = -0.10
		custom_effect_tooltip = GRE_total_pops_turkarrive
		custom_effect_tooltip = GRE_total_pops_turkleave
		if = {
			limit = {
				has_country_flag = GRE_no_surrender_claims
			}
			clr_country_flag = GRE_no_surrender_claims
			else = {
				every_owned_state = {
					limit = {
						is_claimed_by = GRE
					}
					remove_claim_by = GRE
				}
			}
		}

		hidden_effect = {
			country_event = { id = gre.212 days = 365 }
			set_temp_variable = {
				leftover = ROOT.popmove
			}
			if = {
				limit = { owns_state = 341 } #Edirne
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.20
				}
				341 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 340 } #Bursa
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.35
				}
				340 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 339 } #Izmir
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.25
				}
				339 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 773 } #Constantinople
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.08
				}
				773 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			capital_scope = {
				add_manpower = leftover
			}
		}
	}
}

# Greek part of population exchange
country_event = {
	id = gre.211
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.211 FROM = [From.GetName]" }
	title = gre.210.t
	desc = gre.211.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		name = gre.210.a
		add_stability = -0.15
		custom_effect_tooltip = GRE_total_pops_greekarrive
		custom_effect_tooltip = GRE_total_pops_greekleave
		if = {
			limit = {
				has_country_flag = GRE_no_surrender_claims
			}
			clr_country_flag = GRE_no_surrender_claims
			else = {
				every_owned_state = {
					limit = {
						is_claimed_by = event_target:turks
					}
					remove_claim_by = event_target:turks
				}
			}
		}

		hidden_effect = {
			country_event = { id = gre.212 days = 365 }
			set_temp_variable = {
				leftover = ROOT.popmove
			}
			if = {
				limit = { owns_state = 184 } #Thrace
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.20
				}
				184 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 769 } #Eastern Macedonia
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.12
				}
				769 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 989 } #Salonika
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.10
				}
				989 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 187 } #Aegean Islands
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.03
				}
				187 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			if = {
				limit = { owns_state = 182 } #Crete
				set_temp_variable = {
					temp1 = ROOT.popmove
				}
				multiply_temp_variable = {
					temp1 = 0.03
				}
				182 = {
					add_manpower = temp1
				}
				multiply_temp_variable = {
					temp1 = -1
				}
				add_to_temp_variable = {
					leftover = temp1
				}
			}
			capital_scope = {
				add_manpower = leftover
			}
		}
	}
}

# Stability restored
country_event = {
	id = gre.212
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.212 FROM = [From.GetName]" }
	title = gre.212.t
	desc = gre.212.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		name = gre.212.a
		add_stability = 0.10
		add_political_power = 100
	}
}

# Greece sends diplomatic mission to Balkans country (fired by focus)
country_event = {
	id = gre.213
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.213 FROM = [From.GetName]" }
	title = gre.213.t
	desc = gre.213.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		name = gre.213.a #Yes, let's work more closely with the Greeks
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.5
				GRE = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
		}
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = GRE
			modifier = GRE_diplomatic_mission
		}
		if = {
			limit = {
				NOT = {
					is_in_faction_with = GRE
				}
			}
			effect_tooltip = {
				diplomatic_relation = {
					country = GRE
					relation = non_aggression_pact
				}
			}
		}
		GRE = {
			country_event = { id = gre.214 days = 3 }
		}
	}
	option = {
		name = gre.213.b #No, there's no need for this
		ai_chance = {
			base = 20
			modifier = {
				factor = 4
				GRE = {
					any_owned_state = {
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
		}
		GRE = {
			country_event = { id = gre.215 days = 3 }
		}
	}
}

# The Balkans country agrees
country_event = {
	id = gre.214
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.214 FROM = [From.GetName]" }
	title = gre.214.t
	desc = gre.214.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.214.a
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
		if = {
			limit = {
				NOT = {
					is_in_faction_with = FROM
				}
			}
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		hidden_effect = {
			modify_country_flag = {
				flag = gre_balkans_coop
				value = 1
			}
		}
	}
}

# The Balkans country refuses
country_event = {
	id = gre.215
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.215 FROM = [From.GetName]" }
	title = gre.215.t
	desc = gre.215.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = {
				has_war_with = ROOT
			}
		}
	}

	option = {
		name = gre.215.a
		add_political_power = -25
	}
}

# Greater stability from Balkans cooperation
country_event = {
	id = gre.216
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.216 FROM = [From.GetName]" }
	title = gre.216.t
	desc = gre.216.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_completed_focus = GRE_balkans_trade
		is_subject = no
		controls_all_owned_states = yes
		has_country_flag = {
			flag = gre_balkans_coop
			value > 1
		}
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		name = gre.216.a
		add_stability = 0.05
		add_political_power = 50
	}
}

# Greater investment from Balkans cooperation
country_event = {
	id = gre.217
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.217 FROM = [From.GetName]" }
	title = gre.216.t
	desc = gre.216.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_completed_focus = GRE_balkans_trade
		is_subject = no
		controls_all_owned_states = yes
		has_country_flag = {
			flag = gre_balkans_coop
			value > 3
		}
		any_owned_state = {
			is_core_of = GRE
			is_in_home_area = yes
			industrial_complex > 0
		}
	}

	mean_time_to_happen = {
		months = 3
	}

	option = {
		name = gre.216.a
		random_owned_state = {
			limit = {
				is_core_of = GRE
				is_in_home_area = yes
				industrial_complex > 0
			}
			add_extra_state_shared_building_slots = 1
			add_building_construction = {
				type = industrial_complex
				level = 1
				instant_build = yes
			}
		}
	}
}


### EXPANSIONISM EVENTS

# Faction leader warned of Megali (fired by focus)
country_event = {
	id = gre.250
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.250 FROM = [From.GetName]" }
	title = gre.250.t
	picture = GFX_report_event_GRE_athens

	desc = {
		text = gre.250.d
		trigger = {
			GRE = { NOT = { has_country_flag = GRE_chose_megali } }
		}
	}
	desc = {
		text = gre.250.d.full
		trigger = {
			GRE = { has_country_flag = GRE_chose_megali }
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.250.a #We support them, no matter what
		ai_chance = {
			base = 60
			modifier = {
				factor = 2
				tag = SER
			}
			modifier = {
				factor = 0.5
				GRE = { has_country_flag = GRE_chose_megali }
			}
			modifier = {
				factor = 1.5
				has_war = yes
			}
			modifier = {
				factor = 0
				is_in_faction_with = ENT
				any_country = {
					NOT = { original_tag = GRE }
					OR = {
						is_guaranteed_by = GER
						is_in_faction_with = GER
					}
					any_owned_state = {
						OR = {
							state = 766 #Northern Epirus
							state = 164 #Dodecanese Islands
							state = 183 #Cyprus
							state = 187 #Aegean Islands
							state = 184 #Western Thrace
							AND = {
								GRE = { has_country_flag = GRE_chose_megali }
								OR = {
									state = 341 #Edirne
									state = 773 #Constantinople
									state = 340 #Bursa
									state = 339 #Izmir
								}
							}
						}
					}
				}
			}
			modifier = {
				factor = 0
				any_country = {
					NOT = { original_tag = GRE }
					OR = {
						is_guaranteed_by = ROOT
						is_in_faction_with = ROOT
					}
					any_owned_state = {
						OR = {
							state = 766 #Northern Epirus
							state = 164 #Dodecanese Islands
							state = 183 #Cyprus
							state = 187 #Aegean Islands
							state = 184 #Western Thrace
							AND = {
								GRE = { has_country_flag = GRE_chose_megali }
								OR = {
									state = 341 #Edirne
									state = 773 #Constantinople
									state = 340 #Bursa
									state = 339 #Izmir
								}
							}
						}
					}
				}
			}
			modifier = {
				factor = 0.5
				any_country = {
					NOT = {
						original_tag = GRE
						is_guaranteed_by = ROOT
						is_in_faction_with = ROOT
					}
					ROOT = {
						has_opinion = { target = PREV value > 100 }
					}
					any_owned_state = {
						OR = {
							state = 766 #Northern Epirus
							state = 164 #Dodecanese Islands
							state = 183 #Cyprus
							state = 187 #Aegean Islands
							state = 184 #Western Thrace
							AND = {
								GRE = { has_country_flag = GRE_chose_megali }
								OR = {
									state = 341 #Edirne
									state = 773 #Constantinople
									state = 340 #Bursa
									state = 339 #Izmir
								}
							}
						}
					}
				}
			}
			modifier = {
				factor = 5
				any_country = {
					NOT = {
						original_tag = GRE
						is_guaranteed_by = ROOT
						is_in_faction_with = ROOT
					}
					OR = {
						has_war_with = ROOT
						any_owned_state = { is_claim_or_core_of_ROOT = yes }
					}
					any_owned_state = {
						OR = {
							state = 766 #Northern Epirus
							state = 164 #Dodecanese Islands
							state = 183 #Cyprus
							state = 187 #Aegean Islands
							state = 184 #Western Thrace
							AND = {
								GRE = { has_country_flag = GRE_chose_megali }
								OR = {
									state = 341 #Edirne
									state = 773 #Constantinople
									state = 340 #Bursa
									state = 339 #Izmir
								}
							}
						}
					}
				}
			}
		}
		GRE = {
			country_event = gre.251
		}
	}
	option = {
		name = gre.250.b #This is unacceptable - they either desist, or they go
		ai_chance = {
			base = 30
			modifier = {
				factor = 1.5
				tag = GER
			}
			modifier = {
				factor = 2
				GRE = { has_country_flag = GRE_chose_megali }
			}
			modifier = {
				factor = 0.1
				has_war = yes
				surrender_progress > 0.10
			}
			modifier = {
				factor = 0.5
				NOT = {
					any_country = {
						NOT = { original_tag = GRE }
						OR = {
							is_guaranteed_by = ROOT
							is_in_faction_with = ROOT
							ROOT = {
								has_opinion = { target = PREV value > 0 }
							}
						}
						any_owned_state = {
							OR = {
								state = 766 #Northern Epirus
								state = 164 #Dodecanese Islands
								state = 183 #Cyprus
								state = 187 #Aegean Islands
								state = 184 #Western Thrace
								AND = {
									GRE = { has_country_flag = GRE_chose_megali }
									OR = {
										state = 341 #Edirne
										state = 773 #Constantinople
										state = 340 #Bursa
										state = 339 #Izmir
									}
								}
							}
						}
					}
				}
			}
		}
		GRE = {
			add_opinion_modifier = { target = ROOT modifier = KR_outraged }
			country_event = gre.252
		}
	}
}

# Faction leader supports Greece
country_event = {
	id = gre.251
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.251 FROM = [From.GetName]" }
	title = gre.251.t
	desc = gre.251.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		is_in_faction_with = FROM
		FROM = { is_faction_leader = yes }
	}

	option = {
		name = gre.251.a
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
}

# Faction leader won't support Greece
country_event = {
	id = gre.252
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.252 FROM = [From.GetName]" }
	title = gre.252.t
	desc = gre.252.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		is_in_faction_with = FROM
		FROM = { is_faction_leader = yes }
	}

	option = {
		name = gre.252.a #Then Megali dies here
		trigger = { is_ai = no }
		clr_country_flag = GRE_chose_megali
		add_political_power = 100
		add_stability = 0.05
		every_state = {
			limit = {
				NOT = { is_owned_by = GRE }
				is_claimed_by = GRE
				OR = {
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Western Thrace
					state = 341 #Edirne
					state = 773 #Constantinople
					state = 340 #Bursa
					state = 339 #Izmir
				}
			}
			remove_claim_by = GRE
		}
	}
	option = {
		name = gre.252.b #Then we are on our own
		leave_faction = yes
		FROM = { country_event = gre.253 }
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
}

# Greece withdrew from faction
country_event = {
	id = gre.253
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.253 FROM = [From.GetName]" }
	title = gre.253.t
	picture = GFX_report_event_GRE_athens

	desc = {
		text = gre.253.d.allies
		trigger = {
			any_allied_country = {
				any_owned_state = {
					OR = {
						is_core_of = GRE
						is_claimed_by = GRE
					}
				}
			}
		}
	}
	desc = {
		text = gre.253.d.noallies
		trigger = {
			NOT = {
				any_allied_country = {
					any_owned_state = {
						OR = {
							is_core_of = GRE
							is_claimed_by = GRE
						}
					}
				}
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.253.a
		set_country_flag = GRE_ejected_from_faction
		add_political_power = -25
	}
}

# Greece offers peace to get claims (fired by decision)
country_event = {
	id = gre.254
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.254 FROM = [From.GetName]" }
	title = gre.254.t
	desc = gre.254.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.254.a #We must make peace while we can
		if = {
			limit = {
				tag = TUR
				FROM = { has_country_flag = GRE_chose_megali }
			}
			add_political_power = -200
			add_stability = -0.20
		}
		else = {
			add_political_power = -100
			add_stability = -0.10
		}

		every_state = {
			limit = {
				OR = {
					is_owned_by = ROOT
					owner = { is_subject_of = ROOT }
					AND = {
						ROOT = { is_faction_leader = yes }
						owner = { is_in_faction_with = ROOT }
					}
				}
				OR = {
					is_core_of = GRE
					is_claimed_by = GRE
					state = 183 #Cyprus
					state = 164 #Dodecanese Islands
					AND = {
						state = 1089 #Momchilgrad
						is_owned_by = TUR
					}
					any_of = {
						array = GRE.subjects
						OR = {
							is_core_of = var:v
							is_claimed_by = var:v
						}
					}
					any_of = {
						array = GRE.faction_members
						OR = {
							is_core_of = var:v
							is_claimed_by = var:v
						}
					}
				}
			}
			GRE = {
				transfer_state = PREV
			}
		}
		GRE = {
			white_peace_with_ROOT = yes
		}
	}
	option = {
		name = gre.254.b #No - they will have to fight us to the last man
		trigger = {
			is_ai = no
		}
		GRE = {
			country_event = gre.255
		}
	}
}

# They refuse to make peace
country_event = {
	id = gre.255
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.255 FROM = [From.GetName]" }
	title = gre.255.t
	desc = gre.255.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.255.a
		add_war_support = 0.10
	}
}

# Move the capital to Constantinople?
country_event = {
	id = gre.256
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.256 FROM = [From.GetName]" }
	title = gre.256.t
	desc = gre.256.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		owns_state = 773 #Constantinople
		capital_scope = { state = 47 } #Attica
		has_war = no
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		name = gre.256.a #Yes, this is the proper capital of our nation
		add_political_power = 50
		add_stability = -0.03
		set_capital = { state = 773 }
	}
	option = {
		name = gre.256.b #No, we remain in Athens as always
		add_stability = 0.05
	}
}

# We are given land w/ end of Bulgarian Empire
state_event = {
	id = gre.257
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.257 FROM = [From.GetName]" }
	title = gre.257.t
	desc = gre.257.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		name = gre.257.a
	}
}

# Greece considers extent of claims
country_event = {
	id = gre.261
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.261 FROM = [From.GetName]" }
	title = gre.261.t
	picture = GFX_report_event_GRE_army

	desc = {
		text = gre.261.d.faction
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
		}
	}
	desc = {
		text = gre.261.d.nofaction
		trigger = {
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = gre.261.a #We will keep our claims to traditional territory
		trigger = {
			any_state = {
				NOT = { is_owned_by = GRE }
				OR = {
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Western Thrace
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_expansionism
					option = GRE_EXPANSIONISM_MEGALI_BIG
				}
			}
		}
		add_political_power = -100
		add_stability = -0.05
		every_other_country = {
			limit = {
				any_owned_state = {
					NOT = { is_owned_by = GRE }
					is_not_claim_or_core_of_ROOT = yes
					OR = {
						state = 766 #Northern Epirus
						state = 164 #Dodecanese Islands
						state = 183 #Cyprus
						state = 187 #Aegean Islands
						state = 184 #Western Thrace
					}
				}
			}
			add_opinion_modifier = { target = GRE modifier = GRE_claimed_my_state }
		}
		every_state = {
			limit = {
				NOT = { is_owned_by = GRE }
				is_not_claim_or_core_of_ROOT = yes
				OR = {
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Western Thrace
				}
			}
			add_claim_by = GRE
		}
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			faction_leader = { country_event = gre.250 }
		}
		else = {
			set_country_flag = GRE_may_start_megali
			unlock_decision_tooltip = GRE_megali_war
		}
	}
	option = {
		name = gre.261.b #Resurrect the Megali Idea!
		trigger = {
			any_state = {
				NOT = { is_owned_by = GRE }
				OR = {
					state = 341 #Edirne
					state = 773 #Constantinople
					state = 340 #Bursa
					state = 339 #Izmir
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = {
					rule = GRE_expansionism
					option = GRE_EXPANSIONISM_MEGALI_SMALL
				}
			}
		}
		add_political_power = -300
		add_stability = -0.15
		set_country_flag = GRE_chose_megali
		every_other_country = {
			limit = {
				any_owned_state = {
					NOT = { is_owned_by = GRE }
					is_not_claim_or_core_of_ROOT = yes
					OR = {
						state = 341 #Edirne
						state = 773 #Constantinople
						state = 340 #Bursa
						state = 339 #Izmir
						state = 766 #Northern Epirus
						state = 164 #Dodecanese Islands
						state = 183 #Cyprus
						state = 187 #Aegean Islands
						state = 184 #Western Thrace
					}
				}
			}
			add_opinion_modifier = { target = GRE modifier = GRE_claimed_my_state }
		}
		every_state = {
			limit = {
				NOT = { is_owned_by = GRE }
				is_not_claim_or_core_of_ROOT = yes
				OR = {
					state = 341 #Edirne
					state = 773 #Constantinople
					state = 340 #Bursa
					state = 339 #Izmir
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Western Thrace
				}
			}
			add_claim_by = GRE
		}
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			faction_leader = { country_event = gre.250 }
		}
		else = {
			set_country_flag = GRE_may_start_megali
			unlock_decision_tooltip = GRE_megali_war
		}
	}
}

### News Events ###
# Greece: Metaxas takes over after Balkan War loss
news_event = {
	id = gre.500
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.500 FROM = [From.GetName]" }
	title = gre.500.t
	desc = gre.500.d
	picture = GFX_news_event_GRE_metaxas

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.500.a
	}
}

# Greece: Syndicalists take over after Balkan War loss
news_event = {
	id = gre.501
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.501 FROM = [From.GetName]" }
	title = gre.501.t
	desc = gre.501.d
	picture = GFX_news_event_GRE_aris

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.501.a
	}
}

# Greece: army takes over after Balkan War loss
news_event = {
	id = gre.502
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.502 FROM = [From.GetName]" }
	title = gre.502.t
	desc = gre.502.d
	picture = GFX_news_event_GRE_papagos

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.502.a
	}
}

# Greece: radical socialists win elections
news_event = {
	id = gre.503
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.503 FROM = [From.GetName]" }
	title = gre.503.t
	desc = gre.503.d
	picture = GFX_news_event_GRE_gavriilides

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.503.a
	}
}

# Greece: syndicalists win elections
news_event = {
	id = gre.504
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.504 FROM = [From.GetName]" }
	title = gre.504.t
	desc = gre.504.d
	picture = GFX_news_event_GRE_zachariadis

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.504.a
	}
}

# Greece: Metaxas overthrows rigged republican vote
news_event = {
	id = gre.505
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.505 FROM = [From.GetName]" }
	title = gre.505.t
	desc = gre.505.d
	picture = GFX_news_event_GRE_metaxas

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.505.a
	}
}

# Greece: syndicalists overthrow rigged republican vote
news_event = {
	id = gre.506
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.506 FROM = [From.GetName]" }
	title = gre.506.t
	desc = gre.506.d
	picture = GFX_news_event_GRE_zachariadis

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.506.a
	}
}

# Greece: syndicalists win civil war
news_event = {
	id = gre.507
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.507 FROM = [From.GetName]" }
	title = gre.507.t
	desc = gre.507.d
	picture = GFX_news_event_GRE_civilwar

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.507.a
	}
}

# Greece: Metaxas wins civil war
news_event = {
	id = gre.508
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.508 FROM = [From.GetName]" }
	title = gre.508.t
	desc = gre.508.d
	picture = GFX_news_event_GRE_civilwar

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.508.a
	}
}

# Greece: republicans win referendum
news_event = {
	id = gre.509
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.509 FROM = [From.GetName]" }
	title = gre.509.t
	desc = gre.509.d
	picture = GFX_news_event_GRE_parliament

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.509.a
	}
}

# Greece: Alexander crowned as king
news_event = {
	id = gre.510
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.510 FROM = [From.GetName]" }
	title = gre.510.t
	desc = gre.510.d
	picture = GFX_news_event_GRE_celebrate

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.510.a
	}
}

# Greece: George crowned as king
news_event = {
	id = gre.511
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.511 FROM = [From.GetName]" }
	title = gre.511.t
	desc = gre.511.d
	picture = GFX_news_event_GRE_celebrate

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.511.a
	}
}

# Greece: monarchy restored - Paul crowned as king
news_event = {
	id = gre.512
	immediate = { log = "[GetDateText]: [Root.GetName]: event gre.512 FROM = [From.GetName]" }
	title = gre.512.t
	desc = gre.512.d
	picture = GFX_news_event_GRE_celebrate

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = GRE
		}
	}

	option = {
		name = gre.512.a
	}
}
